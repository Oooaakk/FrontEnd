[{"D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\main.ts":"1","D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\App.vue":"2","D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\router\\index.ts":"3","D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\store\\index.ts":"4","D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\views\\PageNotFound.vue":"5","D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\views\\SettingPage.vue":"6","D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\views\\ContentUser.vue":"7","D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\views\\ForgetPassword.vue":"8","D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\views\\ChangePassword.vue":"9","D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\views\\ContentVisitor.vue":"10","D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\views\\RegisterPage.vue":"11","D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\views\\DashBoard.vue":"12","D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\views\\PostPage.vue":"13","D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\views\\EditPage.vue":"14","D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\views\\MainPageVisitor.vue":"15","D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\views\\LoginPage.vue":"16","D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\views\\MainPageUser.vue":"17","D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\components\\HubIcon.vue":"18","D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\components\\AvatarIcon.vue":"19","D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\components\\reviewCard.vue":"20","D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\components\\MovieCard.vue":"21","D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\utils\\RequestFile.js":"22","D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\utils\\Request2.js":"23"},{"size":675,"mtime":1665280167115,"results":"24","hashOfConfig":"25"},{"size":394,"mtime":1663930690949,"results":"26","hashOfConfig":"25"},{"size":2842,"mtime":1663984271647,"results":"27","hashOfConfig":"25"},{"size":157,"mtime":1663050829952,"results":"28","hashOfConfig":"25"},{"size":178,"mtime":1663423423001,"results":"29","hashOfConfig":"25"},{"size":4182,"mtime":1665208914322,"results":"30","hashOfConfig":"25"},{"size":949,"mtime":1664106919276,"results":"31","hashOfConfig":"25"},{"size":9394,"mtime":1664798882274,"results":"32","hashOfConfig":"25"},{"size":4091,"mtime":1664857331942,"results":"33","hashOfConfig":"25"},{"size":852,"mtime":1664103839936,"results":"34","hashOfConfig":"25"},{"size":13084,"mtime":1665212149756,"results":"35","hashOfConfig":"25"},{"size":650,"mtime":1664113432195,"results":"36","hashOfConfig":"25"},{"size":6854,"mtime":1665284216354,"results":"37","hashOfConfig":"25"},{"size":3381,"mtime":1663984924983,"results":"38","hashOfConfig":"25"},{"size":2245,"mtime":1664175120958,"results":"39","hashOfConfig":"25"},{"size":4020,"mtime":1665203767226,"results":"40","hashOfConfig":"25"},{"size":3336,"mtime":1664172206878,"results":"41","hashOfConfig":"25"},{"size":776,"mtime":1664172121310,"results":"42","hashOfConfig":"25"},{"size":9171,"mtime":1664943987991,"results":"43","hashOfConfig":"25"},{"size":275,"mtime":1664103795809,"results":"44","hashOfConfig":"25"},{"size":470,"mtime":1664103648322,"results":"45","hashOfConfig":"25"},{"size":1835,"mtime":1665190239471,"results":"46","hashOfConfig":"25"},{"size":179,"mtime":1665211997659,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1ytzq9v",{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},"D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\main.ts",["104"],"D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\App.vue",[],[],"D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\router\\index.ts",[],[],"D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\store\\index.ts",[],"D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\views\\PageNotFound.vue",[],"D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\views\\SettingPage.vue",["105","106"],"\r\n<template>\r\n\r\n  <div class=\"common-layout\">\r\n      <el-container>\r\n        <el-header class=\"header\" >\r\n          \r\n          <AvatarIcon/>\r\n      \r\n        </el-header>\r\n        \r\n        <el-form class=\"allform\"\r\n      \r\n        >\r\n          \r\n        <el-form-item label = \"Username: \" class=\"movietitle\">\r\n          <el-input class=\"movietitleinput\" style = \"width: 300px\" v-model=\"input\" placeholder=\"Please input new username\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"Gender: \" class = \"languagecolour\">\r\n          <el-select class=\"genderoption\" style = \"width: 300px\" v-model=\"value\" placeholder=\"Select\" size=\"large\">\r\n            <el-option\r\n              v-for=\"item in options\"\r\n              :key=\"item.value\"\r\n              :label=\"item.label\"\r\n              :value=\"item.value\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n        <!-- <el-form-item class = \"languagecolour\" label=\"Age\">\r\n    <el-input-number class=\"ageoption\" style = \"width: 300px\" v-model=\"age\" :min=\"1\" :max=\"120\" @change=\"handleChange\" />\r\n  </el-form-item> -->\r\n\r\n      <el-form-item label=\"Add avatar:\" class=\"labelcolor\">\r\n        <el-upload\r\n    v-model:file-list=\"fileList\"\r\n    class=\"upload-demo\"\r\n    action=\"https://run.mocky.io/v3/9d059bf9-4660-45f2-925d-ce80ad6c4d15\"\r\n    multiple\r\n    :on-preview=\"handlePreview\"\r\n    :on-remove=\"handleRemove\"\r\n    :before-remove=\"beforeRemove\"\r\n    :limit=\"1\"\r\n    :on-exceed=\"handleExceed\"\r\n    :auto-upload=\"false\"\r\n    \r\n  >\r\n    <el-button type=\"primary\">Click to upload</el-button>\r\n    <template #tip>\r\n      <div class=\"el-upload__tip\">\r\n        jpg/png files with a size less than 500KB.\r\n      </div>\r\n    </template>\r\n  </el-upload>\r\n      </el-form-item> \r\n      \r\n      \r\n    </el-form>\r\n    <el-button type=\"warning\" round class=\"LRbutton\" @click=\"$router.push('/moviehub/dashboard/1234')\">Save</el-button> \r\n  </el-container>\r\n      \r\n    </div>\r\n    \r\n   <HubIcon/>\r\n  </template>\r\n\r\n\r\n  <script lang=\"ts\" setup>\r\n    import { ElMessage, ElMessageBox } from 'element-plus'\r\n    import { ref } from 'vue'\r\nimport type { UploadProps, UploadUserFile } from 'element-plus'\r\nimport HubIcon from '@/components/HubIcon.vue';\r\nimport AvatarIcon from '../components/AvatarIcon.vue';\r\n\r\nconst input = ref('')\r\nconst value = ref()\r\nconst age = ref(1)\r\n\r\nconst fileList = ref<UploadUserFile[]>([\r\n\r\n])\r\nconst handleChange = (value: number) => {\r\n  console.log(value)\r\n}\r\n\r\nconst options = [\r\n  {\r\n    value: '0',\r\n    label: 'Male',\r\n\r\n  },\r\n  {\r\n    value: '1',\r\n    label: 'Female',\r\n  },\r\n  \r\n]\r\nconst handleRemove: UploadProps['onRemove'] = (file, uploadFiles) => {\r\n  console.log(file, uploadFiles)\r\n}\r\n\r\nconst handlePreview: UploadProps['onPreview'] = (uploadFile) => {\r\n  console.log(uploadFile)\r\n}\r\n\r\nconst handleExceed: UploadProps['onExceed'] = (files, uploadFiles) => {\r\n  ElMessage.warning(\r\n    `The limit is 1, you selected ${files.length} files this time, add up to ${\r\n      files.length + uploadFiles.length\r\n    } totally`\r\n  )\r\n}\r\n\r\nconst beforeRemove: UploadProps['beforeRemove'] = (uploadFile) => {\r\n  return ElMessageBox.confirm(\r\n    `Cancel the transfert of ${uploadFile.name} ?`\r\n  ).then(\r\n    () => true,\r\n    () => false\r\n  )\r\n}\r\n\r\n    </script>\r\n\r\n<style>\r\n.languagecolour {\r\n  color: #FF9900;\r\n  margin-left:330px;\r\n  margin-top:40px;\r\n}\r\nbody {\r\nbackground-color: #222231;\r\n}\r\n.header{\r\n  background-color: black;\r\n\r\n}\r\n\r\n.LRbutton{\r\n  width:10%;\r\n  margin-left:590px;\r\n}\r\n.main{\r\n  background-color: white;\r\n  height:64px;\r\n  \r\n}\r\n.upload-demo{\r\n  margin-left:-50px;\r\n}\r\n.movietitle{\r\n   margin-top:50px;\r\n   margin-left:330px;\r\n\r\n}\r\n.labelcolor{\r\n   margin-top:50px;\r\n   margin-left:330px;\r\n\r\n}\r\n.textinput{\r\n  margin-left:17px;\r\n  width:50%;\r\n \r\n}\r\n.star{\r\n  margin-left:24px;\r\n}\r\n\r\n.movietitle .el-form-item__label {\r\n  color: orange\r\n}\r\n\r\n.labelcolor .el-form-item__label {\r\n  color: orange\r\n}\r\n.languagecolour .el-form-item__label {\r\n  color: orange\r\n}\r\n\r\n.movietitleinput{\r\n  width:50%;\r\n}\r\n.genderoption{\r\n  margin-left:17px;\r\n}\r\n\r\n.ageoption{\r\n  margin-left: 42px;\r\n}\r\n.allform{\r\n  margin-left:100px;\r\n}\r\n.inputform{\r\n  width:50%;\r\n  margin-left: 1px;\r\n}\r\n</style>","D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\views\\ContentUser.vue",[],"D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\views\\ForgetPassword.vue",["107"],"<template>\r\n  <div class=\"forgotpwd\">\r\n    <section class=\"form_title\">\r\n      <div class=\"manage_title\">\r\n        <el-form\r\n          :model=\"forgotPass\"\r\n          :rules=\"rules\"\r\n          ref=\"forgotPassForm\"\r\n          label-width=\"80px\"\r\n          class=\"registerForm\"\r\n          hide-required-asterisk\r\n          \r\n        >\r\n          <div class=\"forgot_title\">\r\n            <h3>forget password</h3>\r\n          </div>\r\n          <el-form-item label=\"email\" prop=\"email\">\r\n            <el-input\r\n              type=\"email\"\r\n              v-model=\"forgotPass.email\"\r\n              prefix-icon=\"el-icon-message\"\r\n              placeholder=\"type in email\"\r\n            >\r\n            </el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"password\" prop=\"password\">\r\n            <el-input\r\n              :type=\"pwdType\"\r\n              v-model=\"forgotPass.password\"\r\n              prefix-icon=\"el-icon-lock\"\r\n              placeholder=\"type in password\"\r\n            >\r\n              <i\r\n        \r\n                title=\"show or hide password\"\r\n                :class=\"showPwd\"\r\n                :style=\"{ color: '#409eff', cursor: 'pointer' }\"\r\n                @click=\"togglePwd\"\r\n              >\r\n              </i>\r\n            </el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"confirm password\" prop=\"password2\">\r\n            <el-input\r\n              :type=\"pwdType\"\r\n              v-model=\"forgotPass.password2\"\r\n              prefix-icon=\"el-icon-lock\"\r\n              placeholder=\"confirm password\"\r\n            >\r\n              <i\r\n     \r\n                title=\"show or hide password\"\r\n                :class=\"showPwd\"\r\n                :style=\"{ color: '#409eff', cursor: 'pointer' }\"\r\n                @click=\"togglePwd\"\r\n              >\r\n              </i>\r\n            </el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"verification code\" prop=\"verificationCode\">\r\n            <div class=\"vertify\">\r\n              <el-input\r\n                prefix-icon=\"el-icon-key\"\r\n                v-model=\"forgotPass.verificationCode\"\r\n                placeholder=\"verification code\"\r\n                auto-complete=\"off\"\r\n              ></el-input>\r\n              <el-button\r\n                type=\"primary\"\r\n                plain\r\n                @click=\"getCode('forgotPassForm')\"\r\n                :disabled=\"isDisabled\"\r\n                class=\"emailcode\"\r\n              >\r\n                {{ btnMsg }}\r\n              </el-button>\r\n            </div>\r\n          </el-form-item>\r\n          <div class=\"forgot_button\">\r\n            <el-button type=\"primary\" @click=\"forgetPass('forgotPassForm')\" class=\"confirm\"\r\n              >submit</el-button\r\n            >\r\n          </div>\r\n          <div class=\"tip_area\">\r\n            <router-link to=\"/moviehub/loginpage\">go to login</router-link>\r\n            <p>If there is no verification code,check spam email </p>\r\n          </div>\r\n        </el-form>\r\n      </div>\r\n    </section>\r\n  </div>\r\n  <HubIcon/>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/RequestFile.js\"\r\nimport HubIcon from \"@/components/HubIcon.vue\"\r\nexport default {\r\n    name: \"ForgotPassword\",\r\n    data() {\r\n        const validatePass2 = (rule, value, callback) => {\r\n            if (value !== this.forgotPass.password) {\r\n                callback(new Error(\"input same password!!!\"));\r\n            }\r\n            else {\r\n                callback();\r\n            }\r\n        };\r\n        return {\r\n            pwdType: \"password\",\r\n            isShowPwd: false,\r\n            btnMsg: \"get code\",\r\n            isDisabled: false,\r\n            time: 30,\r\n            forgotPass: {\r\n                email: \"\",\r\n                password: \"\",\r\n                // password2: \"\",\r\n                verificationCode: \"\",\r\n            },\r\n            rules: {\r\n                email: [\r\n                    { required: true, message: \"email cannot be blank\", trigger: \"blur\" },\r\n                    { type: \"email\", message: \"input correct email\", trigger: \"change\" },\r\n                ],\r\n                password: [\r\n                    { required: true, message: \"password cannot be blank\", trigger: \"blur\" },\r\n                    {\r\n                        min: 5,\r\n                        max: 16,\r\n                        message: \"length of password should be >5, <16\",\r\n                        trigger: \"blur\",\r\n                    },\r\n                ],\r\n                password2: [\r\n                    { required: true, message: \"confirm password cannot be blank\", trigger: \"blur\" },\r\n                    {\r\n                        min: 5,\r\n                        max: 16,\r\n                        message: \"length of confirm password should be >5, <16\",\r\n                        trigger: \"blur\",\r\n                    },\r\n                    { validator: validatePass2, trigger: \"blur\" },\r\n                ],\r\n            },\r\n        };\r\n    },\r\n    computed: {\r\n        showPwd() {\r\n            return this.isShowPwd ? \"third-icon-alieye\" : \"third-icon-alino_eye\";\r\n        },\r\n    },\r\n    methods: {\r\n        togglePwd() {\r\n            this.pwdType === \"password\"\r\n                ? (this.pwdType = \"\")\r\n                : (this.pwdType = \"password\");\r\n            this.isShowPwd = !this.isShowPwd;\r\n        },\r\n        // verification code\r\n        getCode(formName) {\r\n            this.$refs[formName].validate((valid) => {\r\n                if (valid) {\r\n                    request\r\n                        .post(\"/user/forgotPassword/email\", {\r\n                            email: this.forgotPass.email,\r\n                 \r\n                    })\r\n                        .then((res) => {\r\n                        // console.log(res)\r\n                        if (res.status === 200) {\r\n                            console.log(\"nothing\");\r\n                        }\r\n                    }).catch((err) => {\r\n                      this.$message({\r\n                                message: \"email is sent\",\r\n                                type: \"success\",\r\n                            });\r\n                            this.isDisabled = true;\r\n                            let interval = setInterval(() => {\r\n                                this.btnMsg = \"\" + this.time + \"seconds\";\r\n                                --this.time;\r\n                                if (this.time < 0) {\r\n                                    this.btnMsg = \"get code\";\r\n                                    this.time = 30;\r\n                                    this.isDisabled = false;\r\n                                    clearInterval(interval);\r\n                                }\r\n                       }, 1000);\r\n                    });\r\n                }\r\n            });\r\n        },\r\n        // change password\r\n        forgetPass(formName) {\r\n            this.$refs[formName].validate((valid) => {\r\n                if (valid) {\r\n                    request\r\n                        .post(\"/user/forgotPassword\", this.forgotPass)\r\n                        .then((res) => {\r\n                        // console.log(res)\r\n                        if (res.status === 200) {\r\n                            this.$message({\r\n                                message: res.data.message,\r\n                                type: \"success\",\r\n                            });\r\n                            setTimeout(() => {\r\n                                history.pushState({}, \"\", \"/moviehub/loginpage\"); //loginpage\r\n                                location.reload();\r\n                            }, 1000);\r\n                        }\r\n                        else {\r\n                            this.$message({\r\n                                message: res.data.message,\r\n                                type: \"error\",\r\n                            });\r\n                        }\r\n                    })\r\n                        .catch((err) => {\r\n                        this.$message({\r\n                            message: \"system error!\",\r\n                            type: \"error\",\r\n                        });\r\n                        console.log(\"Error\", err);\r\n                    });\r\n                }\r\n            });\r\n        },\r\n    },\r\n    components: { HubIcon }\r\n}\r\n</script>\r\n\r\n<style>\r\n   body {\r\nbackground-image:url('https://wallpapercave.com/dwp2x/wp11089675.jpg');\r\n\r\n}\r\n.forgotpwd {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  background-size: 100% 100%;\r\n}\r\n.form_title {\r\n  width: 370px;\r\n  height: 210px;\r\n  position: absolute;\r\n  top: 5%;\r\n  left: 34%;\r\n  padding: 25px;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n}\r\n.form_title .manage_title .title {\r\n  font-family: 'Microsoft YaHei';\r\n  font-weight: bold;\r\n  font-size: 26px;\r\n  color: #111;\r\n}\r\n.forgot_title {\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n  color: #505458;\r\n}\r\n.registerForm {\r\n  margin-top: 20px;\r\n  background-color: #fff;\r\n  padding: 20px 40px 20px 20px;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 5px 10px #cccc;\r\n}\r\n.vertify {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n.vertify >>> .emailcode {\r\n  margin-left: 10px;\r\n  font-size: 10px;\r\n}\r\n.forgot_button {\r\n  padding-left: 80px;\r\n}\r\n.confirm {\r\n  width: 100%;\r\n}\r\n.tip_area {\r\n  text-align: left;\r\n  font-size: 12px;\r\n  color: #333;\r\n  margin-top: 20px;\r\n}\r\n.tip_area a {\r\n  color: #409eff;\r\n}\r\n.tip_area p {\r\n  margin-top: 15px;\r\n  color: gray;\r\n}\r\n</style>","D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\views\\ChangePassword.vue",["108"],"<template>\r\n\r\n  <div class=\"common-layout\">\r\n      <el-container>\r\n        <el-header class=\"header\" >\r\n          \r\n          <AvatarIcon/>\r\n      \r\n        </el-header>\r\n        \r\n        <el-form class=\"allform\"\r\n        ref=\"ruleFormRef\"\r\n        :rules=\"rules\"\r\n        status-icon\r\n        >\r\n          \r\n        <el-form-item class = \"languagecolour1\" label=\"Original Password\" prop=\"oripass\">\r\n      <el-input\r\n        class = \"inputform\"\r\n        v-model=\"ruleForm.checkPass\"\r\n        type=\"password\"\r\n        autocomplete=\"off\"\r\n      />\r\n    </el-form-item>\r\n  <el-form-item class = \"languagecolour1\" label=\"New Password\" prop=\"checkPass\">\r\n      <el-input\r\n        class = \"inputform\"\r\n        v-model=\"ruleForm.checkPass\"\r\n        type=\"password\"\r\n        autocomplete=\"off\"\r\n      />\r\n    </el-form-item>\r\n    <el-form-item class = \"languagecolour2\" label=\"Confirm Password\" prop=\"confirmPass\">\r\n      <el-input  class = \"inputform\" v-model=\"ruleForm.confirmPass\" type=\"Password\" autocomplete=\"off\"/>\r\n    </el-form-item>\r\n    \r\n      \r\n    </el-form>\r\n    <el-button type=\"warning\" round class=\"LRbutton\" @click=\"$router.push('/moviehub/dashboard/1234')\">Save</el-button> \r\n  </el-container>\r\n      \r\n    </div>\r\n    \r\n   <HubIcon/>\r\n  </template>\r\n\r\n\r\n  <script lang=\"ts\" setup>\r\n    import { reactive, ref } from 'vue'\r\nimport type { FormInstance } from 'element-plus'\r\nimport HubIcon from '@/components/HubIcon.vue';\r\nimport AvatarIcon from '@/components/AvatarIcon.vue';\r\nconst ruleFormRef = ref<FormInstance>()\r\n  const validatePass1 = (rule: any, value: any, callback: any) => {\r\n  if (value === '') {\r\n    callback(new Error('Please input the password'))\r\n  } else {\r\n    if (value!='' && ((ruleForm.checkPass.length < 8 || ruleForm.checkPass.length > 16))){\r\n      callback(new Error('Please input correct form of password'))\r\n    }\r\n    if (ruleForm.confirmPass !== '') {\r\n      if (!ruleFormRef.value) return\r\n      ruleFormRef.value.validateField('confirmPass', () => null)\r\n    }\r\n    callback()\r\n  }\r\n}\r\n\r\nconst validatePass2 = (rule: any, value: any, callback: any) => {\r\n  if (value === '') {\r\n    callback(new Error('Please input the password'))\r\n  } else {\r\n    if (value!='' && ((ruleForm.checkPass.length < 8 || ruleForm.checkPass.length > 16))){\r\n      callback(new Error('Please input correct form of password'))\r\n    }\r\n    if (ruleForm.confirmPass !== '') {\r\n      if (!ruleFormRef.value) return\r\n      ruleFormRef.value.validateField('confirmPass', () => null)\r\n    }\r\n    callback()\r\n  }\r\n}\r\nconst validatePass3 = (rule: any, value: any, callback: any) => {\r\n  if (value === '') {\r\n    callback(new Error('Please input the password again'))\r\n  } else if (value !== ruleForm.checkPass) {\r\n    callback(new Error(\"Two inputs don't match!\"))\r\n  } else {\r\n    callback()\r\n  }\r\n}\r\nconst rules = reactive({\r\n  oripass:[{ validator: validatePass1, trigger: 'blur' }],\r\n  checkPass: [{ validator: validatePass2, trigger: 'blur' }],\r\n  confirmPass: [{ validator: validatePass3, rigger: 'blur' }],\r\n  \r\n})\r\n\r\nconst ruleForm = reactive({\r\n  oripass:'',\r\n  checkPass: '',\r\n  confirmPass: '',\r\n  \r\n})\r\nconst submitForm = (formEl: FormInstance | undefined) => {\r\n  if (!formEl) return\r\n  formEl.validate((valid) => {\r\n    if (valid) {\r\n      console.log('submit!')\r\n    } else {\r\n      console.log('error submit!')\r\n      return false\r\n    }\r\n  })\r\n}\r\n\r\n    </script>\r\n\r\n<style>\r\n\r\nbody {\r\n  background-color: #222231;\r\n}\r\n.header{\r\n  background-color: black;\r\n\r\n}\r\n\r\n.LRbutton{\r\n  width:10%;\r\n  margin-left:590px;\r\n  margin-top:30px;\r\n}\r\n.main{\r\n  background-color: white;\r\n  height:64px;\r\n  \r\n}\r\n.languagecolour1{\r\n   margin-top:150px;\r\n   margin-left:270px;\r\n\r\n}\r\n.languagecolour2{\r\n   margin-top:40px;\r\n   margin-left:250px;\r\n\r\n}\r\n.textinput{\r\n  margin-left:17px;\r\n  width:50%;\r\n \r\n}\r\n\r\n.labelcolor .el-form-item__label {\r\n  color: orange\r\n}\r\n.languagecolour1 .el-form-item__label {\r\n  color: orange\r\n}\r\n.languagecolour2 .el-form-item__label {\r\n  color: orange\r\n}\r\n\r\n.allform{\r\n  margin-left:100px;\r\n}\r\n.inputform{\r\n  width:50%;\r\n  margin-left: 1px;\r\n}\r\n</style>","D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\views\\ContentVisitor.vue",[],"D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\views\\RegisterPage.vue",["109","110","111","112","113"],"<template>\r\n  <div id= 'building'>\r\n      <HubIcon></HubIcon>\r\n  <div>\r\n    <el-card class=\"box-card\">\r\n      <h2 class=\"color\">Register</h2>\r\n      <el-form\r\n        :model=\"ruleForm\"\r\n        status-icon\r\n        :rules=\"rules\"\r\n        ref=\"ruleForm\"\r\n        label-position=\"left\"\r\n        label-width=\"150px\"\r\n        class=\"demo-ruleForm\"\r\n      >\r\n      <el-form-item label=\"email\" prop=\"email\">\r\n            <el-input\r\n              type=\"email\"\r\n              v-model=\"ruleForm.email\"\r\n              prefix-icon=\"el-icon-message\"\r\n              placeholder=\"type in email\"\r\n            >\r\n            </el-input>\r\n          </el-form-item>\r\n        <el-form-item class = \"color1\" label=\"Username\" prop=\"checkusername\">\r\n      <el-input class = \"inputform\" v-model=\"ruleForm.checkusername\" maxlength=16 placeholder=\"Jack\" />\r\n    </el-form-item>\r\n        <el-form-item class = \"color1\" label=\"Gender\" prop=\"checkgender\">\r\n      <el-select v-model=\"ruleForm.checkgender\" class=\"m-2\" placeholder=\"Select\" size=\"large\">\r\n      <el-option\r\n        v-for=\"item in options\"\r\n        :key=\"item.value\"\r\n        :label=\"item.label\"\r\n        :value=\"item.value\"\r\n      />\r\n      </el-select>\r\n    \r\n    </el-form-item>\r\n    <el-form-item class = \"color1\" label=\"Age\" prop=\"checkage\">\r\n      <el-input-number v-model=\"ruleForm.checkage\" :min=\"1\" :max=\"120\" @change=\"handleChange\" />\r\n    </el-form-item>\r\n    <el-form-item label=\"password\" prop=\"password\">\r\n            <el-input\r\n              :type=\"pwdType\"\r\n              v-model=\"ruleForm.password\"\r\n              prefix-icon=\"el-icon-lock\"\r\n              placeholder=\"type in password\"\r\n            >\r\n              <i\r\n        \r\n                title=\"show or hide password\"\r\n                :class=\"showPwd\"\r\n                :style=\"{ color: '#409eff', cursor: 'pointer' }\"\r\n                @click=\"togglePwd\"\r\n              >\r\n              </i>\r\n            </el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"confirm password\" prop=\"password2\">\r\n            <el-input\r\n              :type=\"pwdType\"\r\n              v-model=\"ruleForm.password2\"\r\n              prefix-icon=\"el-icon-lock\"\r\n              placeholder=\"confirm password\"\r\n            >\r\n              <i\r\n     \r\n                title=\"show or hide password\"\r\n                :class=\"showPwd\"\r\n                :style=\"{ color: '#409eff', cursor: 'pointer' }\"\r\n                @click=\"togglePwd\"\r\n              >\r\n              </i>\r\n            </el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"verification code\" prop=\"verificationCode\">\r\n            <div class=\"vertify\">\r\n              <el-input\r\n                prefix-icon=\"el-icon-key\"\r\n                v-model=\"ruleForm.verificationCode\"\r\n                placeholder=\"verification code\"\r\n                auto-complete=\"off\"\r\n              ></el-input>\r\n              <el-button\r\n                type=\"primary\"\r\n                plain\r\n                @click=\"getCode('forgotPassForm')\"\r\n                :disabled=\"isDisabled\"\r\n                class=\"emailcode\"\r\n              >\r\n                {{ btnMsg }}\r\n              </el-button>\r\n            </div>\r\n          </el-form-item>\r\n      </el-form>\r\n      <div class=\"btnGroup\">\r\n        <el-button type=\"primary\" @click=\"submitForm('ruleForm')\"\r\n          >submit</el-button\r\n        >\r\n        <el-button @click=\"resetForm('ruleForm')\">reset</el-button>\r\n        <el-button @click=\"goBack\">back</el-button>\r\n        <el-button @click=\"submitEmail()\">Get verification code</el-button>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport HubIcon from '@/components/HubIcon.vue';\r\nimport request from \"@/utils/RequestFile.js\"\r\nexport default {\r\n  data() {\r\n    \r\n      var validatePass = (rule, value, callback) => {\r\n        if (value === '') {\r\n        callback(new Error('Please input the password'))\r\n        }else if(value!=='' && ((this.ruleForm.pass.length < 5 || this.ruleForm.pass.length > 16))){\r\n          console.log(\"incorrect password form!!\")\r\n          callback(new Error('Please input correct form of password'))\r\n        }else{\r\n          callback()\r\n        }\r\n        \r\n      }\r\n      ;\r\n      var validatePass1 = (rule, value, callback) => {\r\n         var reg = /^([A-Za-z0-9]+[.-_])*[A-Za-z0-9]+@[A-Za-z0-9-]+(\\.[A-Z|a-z]{2,})+$/;\r\n          if (!value) {\r\n            return callback(new Error('cannot input empty email!'))\r\n          } else if (!reg.test(value)) {\r\n            return callback(new Error('please input valid email!'))\r\n          } else {\r\n            callback()\r\n          }\r\n  \r\n      };\r\n      var validatePass3 = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('Please input the password again'))\r\n      } else if (value !== this.ruleForm.pass) {\r\n        callback(new Error(\"Two inputs don't match!\"))\r\n      } else {\r\n        callback()\r\n      }\r\n      };\r\n      var validatePass4 = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('Please input the username'))\r\n        } else {\r\n          callback()\r\n        }\r\n      };\r\n\r\n      var validatePass5 = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('Please input the age'))\r\n        } else {\r\n          callback()\r\n        }\r\n      };\r\n      var validatePass6 = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('Please choose the gender'))\r\n        } else {\r\n          callback()\r\n        }\r\n      }\r\n      var validatePass7 = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('Please input the verification code'))\r\n        } else {\r\n          callback()\r\n        }\r\n      }\r\n      return {\r\n        pwdType: \"password\",\r\n            isShowPwd: false,\r\n            btnMsg: \"get code\",\r\n            isDisabled: false,\r\n            time: 30,\r\n            \r\n        options: [\r\n          {\r\n          value: 'Male',\r\n          label: 'Male',\r\n        },\r\n        {\r\n          value: 'Female',\r\n          label: 'Female',\r\n        },\r\n    \r\n        ],\r\n          \r\n          ruleForm: {\r\n              email: \"\",\r\n              password: \"\",\r\n              password2: \"\",\r\n              checkgender: \"\",\r\n              checkusername: \"\",\r\n              confirmPass: \"\",\r\n              checkage: \"\",\r\n              verificationCode:\"\",\r\n          },\r\n          rules: {\r\n            email: [\r\n                    { required: true, message: \"email cannot be blank\", trigger: \"blur\" },\r\n                    { type: \"email\", message: \"input correct email\", trigger: \"change\" },\r\n                ],\r\n                password: [\r\n                    { required: true, message: \"password cannot be blank\", trigger: \"blur\" },\r\n                    {\r\n                        min: 5,\r\n                        max: 16,\r\n                        message: \"length of password should be >5, <16\",\r\n                        trigger: \"blur\",\r\n                    },\r\n                ],\r\n                password2: [\r\n                    { required: true, message: \"confirm password cannot be blank\", trigger: \"blur\" },\r\n                    {\r\n                        min: 5,\r\n                        max: 16,\r\n                        message: \"length of confirm password should be >5, <16\",\r\n                        trigger: \"blur\",\r\n                    },\r\n                    { validator: validatePass3, trigger: \"blur\" },],\r\n\r\n              checkusername : [{required: true, validator: validatePass4, trigger: \"blur\"}],\r\n              checkage : [{required: true, validator: validatePass5, trigger: \"blur\"}],\r\n              checkgender: [{required: true, validator: validatePass6, trigger: \"blur\"}],\r\n              //password: [{required: true, validator: validatePass7, trigger: \"blur\"}],\r\n             \r\n          },\r\n      };\r\n  },\r\n  computed: {\r\n        showPwd() {\r\n            return this.isShowPwd ? \"third-icon-alieye\" : \"third-icon-alino_eye\";\r\n        },\r\n    },\r\n  methods: {\r\n    togglePwd() {\r\n            this.pwdType === \"password\"\r\n                ? (this.pwdType = \"\")\r\n                : (this.pwdType = \"password\");\r\n            this.isShowPwd = !this.isShowPwd;\r\n        },\r\n        // verification code\r\n        getCode(formName) {\r\n            this.$refs[formName].validate((valid) => {\r\n                if (valid) {\r\n                    request\r\n                        .post(\"/user/forgotPassword/email\", {\r\n                            email: this.forgotPass.email,\r\n                 \r\n                    })\r\n                        .then((res) => {\r\n                        // console.log(res)\r\n                        if (res.status === 200) {\r\n                            console.log(\"nothing\");\r\n                        }\r\n                    }).catch((err) => {\r\n                      this.$message({\r\n                                message: \"email is sent\",\r\n                                type: \"success\",\r\n                            });\r\n                            this.isDisabled = true;\r\n                            let interval = setInterval(() => {\r\n                                this.btnMsg = \"\" + this.time + \"seconds\";\r\n                                --this.time;\r\n                                if (this.time < 0) {\r\n                                    this.btnMsg = \"get code\";\r\n                                    this.time = 30;\r\n                                    this.isDisabled = false;\r\n                                    clearInterval(interval);\r\n                                }\r\n                       }, 1000);\r\n                    });\r\n                }\r\n            });\r\n        },\r\n        // change password\r\n        forgetPass(formName) {\r\n            this.$refs[formName].validate((valid) => {\r\n                if (valid) {\r\n                    request\r\n                        .post(\"/user/forgotPassword\", this.forgotPass)\r\n                        .then((res) => {\r\n                        // console.log(res)\r\n                        if (res.status === 200) {\r\n                            this.$message({\r\n                                message: res.data.message,\r\n                                type: \"success\",\r\n                            });\r\n                            setTimeout(() => {\r\n                                history.pushState({}, \"\", \"/moviehub/loginpage\"); //loginpage\r\n                                location.reload();\r\n                            }, 1000);\r\n                        }\r\n                        else {\r\n                            this.$message({\r\n                                message: res.data.message,\r\n                                type: \"error\",\r\n                            });\r\n                        }\r\n                    })\r\n                        .catch((err) => {\r\n                        this.$message({\r\n                            message: \"system error!\",\r\n                            type: \"error\",\r\n                        });\r\n                        console.log(\"Error\", err);\r\n                    });\r\n                }\r\n            });\r\n        },\r\n      submitEmail() {\r\n        if (this.ruleForm.uname!==''){\r\n          request.post(\"/user/register/email\", {email: this.ruleForm.uname}).then(res => {\r\n            console.log(\"successfully sent\")\r\n          })\r\n \r\n        }else{\r\n          alert(\"input email to get verification code!!!\")\r\n        }\r\n      } ,\r\n      \r\n      submitForm(formName) {\r\n        this.$refs[formName].validate((valid) => {\r\n          if (valid && this.ruleForm.password!=='') {\r\n              console.log(\"register!\");\r\n              request.post(\"/user/register\", {email: this.ruleForm.uname, password: this.ruleForm.pass, \r\n                verificationCode: this.ruleForm.password, age: this.ruleForm.checkage, gender: this.ruleForm.checkgender,\r\n                  username: this.ruleForm.checkusername}).then(res => {\r\n                  if(res.status === 200){\r\n                    this.$message({\r\n                    type: \"success\",\r\n                    message: \"successfully registered\"\r\n                    })\r\n                      this.$router.push('/moviehub/loginpage');\r\n                  }else {\r\n                  this.$message({\r\n                    type: \"error\",\r\n                    message: res.message\r\n                  })\r\n                }\r\n              })\r\n          }else{\r\n            alert(\"input verification code please!!!\")\r\n          }\r\n      })\r\n      },\r\n      resetForm(formName) {\r\n          this.$refs[formName].resetFields();\r\n      },\r\n      goBack() {\r\n          this.$router.go(-1);\r\n      },\r\n  },\r\n  components: { HubIcon }\r\n  \r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.box-card {\r\n  margin: auto auto;\r\n  width: 600px;\r\n}\r\n.login-from {\r\n  margin: auto auto;\r\n}\r\n#building{\r\nbackground:url('https://wallpapercave.com/dwp2x/wp11089675.jpg');\r\nwidth:100%;\r\nheight:100%;\r\nposition:fixed;\r\nbackground-size:100% 100%;\r\n}\r\n.color {\r\n  color: orange;\r\n}\r\n.color1 .el-form-item__label{\r\n  color : orange;\r\n}\r\n</style>","D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\views\\DashBoard.vue",[],"D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\views\\PostPage.vue",["114","115"],"D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\views\\EditPage.vue",["116"],"\r\n<template>\r\n\r\n  <div class=\"common-layout\">\r\n      <el-container>\r\n        <el-header class=\"header\">\r\n          <AvatarIcon/>\r\n        </el-header>\r\n        <el-main class=\"main\">\r\n\r\n        <div class=\"edithere\">Edit here</div>  \r\n        </el-main>\r\n        <el-form>\r\n        \r\n        <el-form-item label = \"Review: \" class=\"labelcolor\">\r\n        <el-input\r\n        v-model=\"textarea\"\r\n        :rows=\"2\"\r\n         type=\"textarea\"\r\n        placeholder=\"Please input movie review\"\r\n        class=\"textinput\"\r\n        \r\n        />\r\n      </el-form-item>\r\n        <el-form-item label = \"Rating: \" class=\"labelcolor\">\r\n        <el-rate\r\n          v-model=\"value\"\r\n          :texts=\"['oops', 'disappointed', 'normal', 'good', 'great']\"\r\n          text-color = 'orange'\r\n          show-text\r\n          class=\"star\"\r\n        ></el-rate>\r\n        \r\n      </el-form-item>\r\n      <el-form-item label=\"Add poster: \" class=\"labelcolor\">\r\n        <el-upload\r\n    v-model:file-list=\"fileList\"\r\n    class=\"upload-demo\"\r\n    action=\"https://run.mocky.io/v3/9d059bf9-4660-45f2-925d-ce80ad6c4d15\"\r\n    multiple\r\n    :on-preview=\"handlePreview\"\r\n    :on-remove=\"handleRemove\"\r\n    :before-remove=\"beforeRemove\"\r\n    :limit=\"1\"\r\n    :on-exceed=\"handleExceed\"\r\n    :auto-upload=\"false\"\r\n  >\r\n    <el-button type=\"primary\">Click to upload</el-button>\r\n    <template #tip>\r\n      <div class=\"el-upload__tip\">\r\n        jpg/png files with a size less than 500KB.\r\n      </div>\r\n    </template>\r\n  </el-upload>\r\n      </el-form-item> \r\n      \r\n      \r\n    </el-form>\r\n    <el-button type=\"warning\" round class=\"LRbutton\" @click=\"$router.push('/moviehub/dashboard/1234')\">Save</el-button> \r\n  </el-container>\r\n      \r\n    </div>\r\n    \r\n    <HubIcon/>\r\n  </template>\r\n\r\n\r\n  <script lang=\"ts\" setup>\r\n    import { ref } from 'vue'\r\n    import { ElMessage, ElMessageBox } from 'element-plus'\r\n\r\nimport type { UploadProps, UploadUserFile } from 'element-plus'\r\nimport HubIcon from '@/components/HubIcon.vue';\r\nimport AvatarIcon from '@/components/AvatarIcon.vue';\r\nconst textarea = ref('')\r\nconst value = ref()\r\n\r\nconst fileList = ref<UploadUserFile[]>([\r\n\r\n])\r\n\r\nconst handleRemove: UploadProps['onRemove'] = (file, uploadFiles) => {\r\n  console.log(file, uploadFiles)\r\n}\r\n\r\nconst handlePreview: UploadProps['onPreview'] = (uploadFile) => {\r\n  console.log(uploadFile)\r\n}\r\n\r\nconst handleExceed: UploadProps['onExceed'] = (files, uploadFiles) => {\r\n  ElMessage.warning(\r\n    `The limit is 1, you selected ${files.length} files this time, add up to ${\r\n      files.length + uploadFiles.length\r\n    } totally`\r\n  )\r\n}\r\n\r\nconst beforeRemove: UploadProps['beforeRemove'] = (uploadFile, uploadFiles) => {\r\n  return ElMessageBox.confirm(\r\n    `Cancel the transfert of ${uploadFile.name} ?`\r\n  ).then(\r\n    () => true,\r\n    () => false\r\n  )\r\n}\r\n    </script>\r\n\r\n<style>\r\n  body {\r\n\r\nbackground-color: #222231;\r\n}\r\n  .header{\r\n  background-color: black;\r\n\r\n  }\r\n  \r\n.LRbutton{\r\n  width:10%;\r\n  margin-left:530px;\r\n}\r\n.main{\r\n  background-color: white;\r\n  height:64px;\r\n  \r\n}\r\n.upload-demo{\r\n  margin-left:-55px;\r\n}\r\n.edithere{\r\n  position: absolute;\r\n  font-weight: bold;\r\n  font-size: x-large;\r\n}\r\n.labelcolor{\r\n   margin-top:50px;\r\n   margin-left:330px;\r\n\r\n}\r\n.textinput{\r\n  margin-left:17px;\r\n  width:50%;\r\n \r\n}\r\n.star{\r\n  margin-left:24px;\r\n}\r\n\r\n.labelcolor .el-form-item__label {\r\n  color: orange\r\n}\r\n\r\n</style>","D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\views\\MainPageVisitor.vue",[],"D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\views\\LoginPage.vue",["117"],"<template>\r\n  <div id= 'building'>\r\n      <HubIcon></HubIcon>\r\n  <div >\r\n    <el-card class=\"box-card\">\r\n      <h2 class = \"color\">Login</h2>\r\n      <el-form\r\n        :model=\"ruleForm\"\r\n        status-icon\r\n        :rules=\"rules\"\r\n        ref=\"ruleForm\"\r\n        label-position=\"left\"\r\n        label-width=\"100px\"\r\n        class=\"login-from\"\r\n        hide-required-aterisk=\"false\"\r\n      >\r\n        <el-form-item class = \"color1\" label=\"Email\" prop=\"uname\" >\r\n          <el-input v-model=\"ruleForm.uname\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item class = \"color1\" label=\"Password\" prop=\"password\">\r\n          <el-input\r\n            type=\"password\"\r\n            v-model=\"ruleForm.password\"\r\n            autocomplete=\"off\"\r\n          ></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div>\r\n      <el-button @click=\"$router.push('/moviehub/forgetpassword')\" class=\"forgetpass\">Forgot password?</el-button>\r\n      </div>\r\n      <div class=\"btnGroup\">\r\n          \r\n        <el-button type=\"primary\" @click=\"submitForm('ruleForm')\"\r\n        v-loading=\"loading\"\r\n          >Login\r\n          </el-button>\r\n        <el-button @click=\"resetForm('ruleForm')\">Reset</el-button>\r\n        <router-link to=\"/moviehub/RegisterPage\">\r\n          <el-button style=\"margin-left:10px\">Register</el-button>\r\n        </router-link>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport HubIcon from '@/components/HubIcon.vue';\r\nimport request from \"@/utils/RequestFile.js\";\r\nimport request2 from \"@/utils/Request2.js\";\r\nexport default {\r\n  data() {\r\n      return {\r\n          components: {\r\n              HubIcon\r\n          },\r\n          ruleForm: {\r\n              uname: \"\",\r\n              password: \"\",\r\n          },\r\n          rules: {\r\n              uname: [\r\n                    { required: true, message: \"email cannot be blank\", trigger: \"blur\" },\r\n                    { type: \"email\", message: \"input correct email\", trigger: \"change\" },\r\n              ],\r\n              password: [\r\n                    { required: true, message: \"password cannot be blank\", trigger: \"blur\" },\r\n              ],\r\n          },\r\n          loading: false,\r\n      };\r\n  },\r\n  methods: {\r\n      submitForm(formName) {\r\n          this.$refs[formName].validate((valid) => {\r\n          // click login, login animation\r\n          this.loading = true;\r\n          // if (valid) {\r\n          //   console.log(\"movie\")\r\n          //   request2.get(\"/k_gh3vr6fp\").then(res => {\r\n          //     console.log(\"success\");\r\n          //   })\r\n          // }\r\n          if (valid) {\r\n              console.log('submit!')\r\n              request.post(\"/user/login\", {email: this.ruleForm.uname, password: this.ruleForm.password}).then(res => {\r\n                    if(res.status !== 200){\r\n                      console.log(\"HEREEEEEE!!\");\r\n                      this.$router.push(\"/moviehub/loginpage\");\r\n                      alert(\"incorrect email or password!!\")\r\n                      \r\n                    }else if(res.status === 200){\r\n                      console.log(\"success\");\r\n                  \r\n                      this.$router.push('/moviehub/mainpageuser/'+res.data.body.id);\r\n                      \r\n                  }\r\n              })\r\n          } else {  \r\n            console.log(\"error submit!!\");\r\n\r\n            this.loading = false;\r\n            return false;\r\n          }\r\n          });\r\n      },\r\n      resetForm(formName) {\r\n          this.$refs[formName].resetFields();\r\n      },\r\n  },\r\n  components: { HubIcon }\r\n};\r\n</script>\r\n\r\n<style >\r\n.color {\r\n  color: orange;\r\n}\r\n.forgetpass {\r\n  color: orange;\r\n}\r\n.color1 .el-form-item__label{\r\n  color : orange;\r\n}\r\n.box-card {\r\n  margin: auto auto;\r\n  margin-top: 150px;\r\n  width: 400px;\r\n}\r\n.login-from {\r\n  margin: auto auto;\r\n}\r\n#building{\r\nbackground:url('https://wallpapercave.com/dwp2x/wp11089675.jpg');\r\nwidth:100%;\r\nheight:100%;\r\nposition:fixed;\r\nbackground-size:100% 100%;\r\n}\r\n\r\n.btnGroup{\r\n  margin-top: 20px;\r\n}\r\n\r\n</style>","D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\views\\MainPageUser.vue",[],"D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\components\\HubIcon.vue",[],"D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\components\\AvatarIcon.vue",[],"D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\components\\reviewCard.vue",[],"D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\components\\MovieCard.vue",[],"D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\utils\\RequestFile.js",["118"],"import axios from 'axios'\r\nimport router from \"@/router\"\r\n\r\nconst request = axios.create({\r\n  baseURL: \"https://moivehub-itproject-team004.herokuapp.com\",\r\n  timeout: 100000\r\n})\r\n\r\n// // 请求白名单，如果请求在白名单里面，将不会被拦截校验权限\r\n// const whiteUrls = [\"/user/login\", '/user/register']\r\n\r\n// // request 拦截器\r\n// // 可以自请求发送前对请求做一些处理\r\n// // 比如统一加token，对请求参数统一加密\r\n// request.interceptors.request.use(config => {\r\n//   config.headers['Content-Type'] = 'application/json;charset=utf-8'\r\n\r\n//   // 取出sessionStorage里面缓存的用户信息\r\n//   let userJson = sessionStorage.getItem(\"user\")\r\n//   if (!whiteUrls.includes(config.url)) {  // 校验请求白名单\r\n//     if (!userJson) {\r\n//       router.push(\"/moviehub/loginpage\")\r\n//     } else {\r\n//       let user = JSON.parse(userJson)\r\n//       config.headers['token'] = user.token  // 设置请求头\r\n//     }\r\n//   }\r\n//   return config\r\n// }, error => {\r\n//   return Promise.reject(error)\r\n// })\r\n\r\n// // response 拦截器\r\n// // 可以在接口响应后统一处理结果\r\n// request.interceptors.response.use(\r\n//   response => {\r\n//     let res = response.data\r\n//     // 如果是返回的文件\r\n//     if (response.config.responseType === 'blob') {\r\n//       return res\r\n//     }\r\n//     // 兼容服务端返回的字符串数据\r\n//     if (typeof res === 'string') {\r\n//       res = res ? JSON.parse(res) : res\r\n//     }\r\n//     // 验证token\r\n//     if (res.code === '401') {\r\n//       console.error(\"token过期，重新登录\")\r\n//       router.push(\"/moveihub/loginpage\")\r\n//     }\r\n//     return res\r\n//   },\r\n//   error => {\r\n//     console.log('err' + error) // for debug\r\n//     return Promise.reject(error)\r\n//   }\r\n// )\r\n\r\n\r\nexport default request",[],"D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\utils\\Request2.js",[],{"ruleId":"119","severity":1,"message":"120","line":9,"column":8,"nodeType":"121","messageId":"122","endLine":9,"endColumn":11},{"ruleId":"119","severity":1,"message":"123","line":76,"column":7,"nodeType":"121","messageId":"122","endLine":76,"endColumn":10},{"ruleId":"119","severity":1,"message":"124","line":81,"column":7,"nodeType":"121","messageId":"122","endLine":81,"endColumn":19},{"ruleId":"119","severity":1,"message":"125","line":174,"column":31,"nodeType":"121","messageId":"122","endLine":174,"endColumn":34},{"ruleId":"119","severity":1,"message":"126","line":105,"column":7,"nodeType":"121","messageId":"122","endLine":105,"endColumn":17},{"ruleId":"119","severity":1,"message":"127","line":115,"column":11,"nodeType":"121","messageId":"122","endLine":115,"endColumn":23},{"ruleId":"119","severity":1,"message":"128","line":127,"column":11,"nodeType":"121","messageId":"122","endLine":127,"endColumn":24},{"ruleId":"119","severity":1,"message":"129","line":169,"column":11,"nodeType":"121","messageId":"122","endLine":169,"endColumn":24},{"ruleId":"119","severity":1,"message":"125","line":263,"column":31,"nodeType":"121","messageId":"122","endLine":263,"endColumn":34},{"ruleId":"119","severity":1,"message":"130","line":320,"column":83,"nodeType":"121","messageId":"122","endLine":320,"endColumn":86},{"ruleId":"119","severity":1,"message":"131","line":100,"column":10,"nodeType":"121","messageId":"122","endLine":100,"endColumn":13},{"ruleId":"119","severity":1,"message":"132","line":102,"column":8,"nodeType":"121","messageId":"122","endLine":102,"endColumn":18},{"ruleId":"119","severity":1,"message":"133","line":98,"column":64,"nodeType":"121","messageId":"122","endLine":98,"endColumn":75},{"ruleId":"119","severity":1,"message":"134","line":50,"column":8,"nodeType":"121","messageId":"122","endLine":50,"endColumn":16},{"ruleId":"119","severity":1,"message":"135","line":2,"column":8,"nodeType":"121","messageId":"122","endLine":2,"endColumn":14},"@typescript-eslint/no-unused-vars","'Vue' is defined but never used.","Identifier","unusedVar","'age' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'err' is defined but never used.","'submitForm' is assigned a value but never used.","'validatePass' is assigned a value but never used.","'validatePass1' is assigned a value but never used.","'validatePass7' is assigned a value but never used.","'res' is defined but never used.","'ref' is defined but never used.","'AvatarIcon' is defined but never used.","'uploadFiles' is defined but never used.","'request2' is defined but never used.","'router' is defined but never used."]