{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-216897e8\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  id: \"building\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"color\"\n}, \"Register\", -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = {\n  class: \"vertify\"\n};\nconst _hoisted_4 = {\n  class: \"btnGroup\"\n};\n\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\"submit\");\n\nconst _hoisted_6 = /*#__PURE__*/_createTextVNode(\"reset\");\n\nconst _hoisted_7 = /*#__PURE__*/_createTextVNode(\"back\");\n\nconst _hoisted_8 = /*#__PURE__*/_createTextVNode(\"Get verification code\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_HubIcon = _resolveComponent(\"HubIcon\");\n\n  const _component_el_input = _resolveComponent(\"el-input\");\n\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n\n  const _component_el_option = _resolveComponent(\"el-option\");\n\n  const _component_el_select = _resolveComponent(\"el-select\");\n\n  const _component_el_input_number = _resolveComponent(\"el-input-number\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_form = _resolveComponent(\"el-form\");\n\n  const _component_el_card = _resolveComponent(\"el-card\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_HubIcon), _createElementVNode(\"div\", null, [_createVNode(_component_el_card, {\n    class: \"box-card\"\n  }, {\n    default: _withCtx(() => [_hoisted_2, _createVNode(_component_el_form, {\n      model: $data.ruleForm,\n      \"status-icon\": \"\",\n      rules: $data.rules,\n      ref: \"ruleForm\",\n      \"label-position\": \"left\",\n      \"label-width\": \"150px\",\n      class: \"demo-ruleForm\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        class: \"color1\",\n        label: \"Email\",\n        prop: \"uname\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.ruleForm.uname,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.ruleForm.uname = $event)\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\"])]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_el_form_item, {\n        class: \"color1\",\n        label: \"Username\",\n        prop: \"checkusername\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          class: \"inputform\",\n          modelValue: $data.ruleForm.checkusername,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.ruleForm.checkusername = $event),\n          maxlength: \"16\",\n          placeholder: \"Jack\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\"])]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_el_form_item, {\n        class: \"color1\",\n        label: \"Gender\",\n        prop: \"checkgender\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $data.ruleForm.checkgender,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.ruleForm.checkgender = $event),\n          class: \"m-2\",\n          placeholder: \"Select\",\n          size: \"large\"\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.options, item => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: item.value,\n              label: item.label,\n              value: item.value\n            }, null, 8\n            /* PROPS */\n            , [\"label\", \"value\"]);\n          }), 128\n          /* KEYED_FRAGMENT */\n          ))]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"modelValue\"])]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_el_form_item, {\n        class: \"color1\",\n        label: \"Age\",\n        prop: \"checkage\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input_number, {\n          modelValue: $data.ruleForm.checkage,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.ruleForm.checkage = $event),\n          min: 1,\n          max: 120,\n          onChange: _ctx.handleChange\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"onChange\"])]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_el_form_item, {\n        class: \"color1\",\n        label: \"Password\",\n        prop: \"pass\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          type: \"password\",\n          modelValue: $data.ruleForm.pass,\n          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.ruleForm.pass = $event),\n          autocomplete: \"off\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\"])]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_el_form_item, {\n        class: \"color1\",\n        label: \"confirm password\",\n        prop: \"confirmPass\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          class: \"inputform\",\n          modelValue: $data.ruleForm.confirmPass,\n          \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.ruleForm.confirmPass = $event),\n          type: \"Password\",\n          autocomplete: \"off\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\"])]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_el_form_item, {\n        label: \"verification code\",\n        prop: \"verificationCode\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_input, {\n          \"prefix-icon\": \"el-icon-key\",\n          modelValue: _ctx.forgotPass.verificationCode,\n          \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => _ctx.forgotPass.verificationCode = $event),\n          placeholder: \"verification code\",\n          \"auto-complete\": \"off\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\"]), _createVNode(_component_el_button, {\n          type: \"primary\",\n          plain: \"\",\n          onClick: _cache[7] || (_cache[7] = $event => _ctx.getCode('forgotPassForm')),\n          disabled: _ctx.isDisabled,\n          class: \"emailcode\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString($data.btnMsg), 1\n          /* TEXT */\n          )]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"disabled\"])])]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"model\", \"rules\"]), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: _cache[8] || (_cache[8] = $event => $options.submitForm('ruleForm'))\n    }, {\n      default: _withCtx(() => [_hoisted_5]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_button, {\n      onClick: _cache[9] || (_cache[9] = $event => $options.resetForm('ruleForm'))\n    }, {\n      default: _withCtx(() => [_hoisted_6]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_button, {\n      onClick: $options.goBack\n    }, {\n      default: _withCtx(() => [_hoisted_7]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"onClick\"]), _createVNode(_component_el_button, {\n      onClick: _cache[10] || (_cache[10] = $event => $options.submitEmail())\n    }, {\n      default: _withCtx(() => [_hoisted_8]),\n      _: 1\n      /* STABLE */\n\n    })])]),\n    _: 1\n    /* STABLE */\n\n  })])]);\n}","map":{"version":3,"mappings":";;;;;EACOA,EAAE,EAAE;;;gEAILC,oBAA+B,IAA/B,EAA+B;EAA3BC,KAAK,EAAC;AAAqB,CAA/B,EAAkB,UAAlB,EAA0B;AAAA;AAA1B;;;EAyCWA,KAAK,EAAC;;;EAmBZA,KAAK,EAAC;;;iDAEN;;iDAEuC;;iDACf;;iDACO;;;;;;;;;;;;;;;;;;;;;uBAtExCC,oBA0EM,KA1EN,cA0EM,CAzEFC,aAAmBC,kBAAnB,CAyEE,EAxENJ,oBAuEM,KAvEN,EAuEM,IAvEN,EAuEM,CAtEJG,aAqEUE,kBArEV,EAqEU;IArEDJ,KAAK,EAAC;EAqEL,CArEV,EAAyB;sBACvB,MAA+B,CAA/BK,UAA+B,EAC/BH,aA0DUI,kBA1DV,EA0DU;MAzDPC,KAAK,EAAEC,cAyDA;MAxDR,iBAwDQ;MAvDPC,KAAK,EAAED,WAuDA;MAtDRE,GAAG,EAAC,UAsDI;MArDR,kBAAe,MAqDP;MApDR,eAAY,OAoDJ;MAnDRV,KAAK,EAAC;IAmDE,CA1DV;wBASE,MAEe,CAFfE,aAEeS,uBAFf,EAEe;QAFDX,KAAK,EAAE,QAEN;QAFeY,KAAK,EAAC,OAErB;QAF6BC,IAAI,EAAC;MAElC,CAFf;0BACE,MAA8C,CAA9CX,aAA8CY,mBAA9C,EAA8C;sBAA3BN,eAASO,KAAkB;qEAA3BP,eAASO,QAAKC;QAAa,CAA9C;;QAAA,iBAA8C;;;;OADhD,CAEe,EACfd,aAEWS,uBAFX,EAEW;QAFGX,KAAK,EAAG,QAEX;QAFoBY,KAAK,EAAC,UAE1B;QAFqCC,IAAI,EAAC;MAE1C,CAFX;0BACF,MAAiG,CAAjGX,aAAiGY,mBAAjG,EAAiG;UAAvFd,KAAK,EAAG,WAA+E;sBAA1DQ,eAASS,aAAiD;qEAA1DT,eAASS,gBAAaD,OAAoC;UAAlCE,SAAS,EAAC,IAAwB;UAArBC,WAAW,EAAC;QAAS,CAAjG;;QAAA,iBAAiG;;;;OAD/F,CADe,EAIfjB,aAUWS,uBAVX,EAUW;QAVGX,KAAK,EAAG,QAUX;QAVoBY,KAAK,EAAC,QAU1B;QAVmCC,IAAI,EAAC;MAUxC,CAVX;0BACF,MAOY,CAPZX,aAOYkB,oBAPZ,EAOY;sBAPQZ,eAASa,WAOjB;qEAPQb,eAASa,cAAWL,OAO5B;UAP8BhB,KAAK,EAAC,KAOpC;UAP0CmB,WAAW,EAAC,QAOtD;UAP+DG,IAAI,EAAC;QAOpE,CAPZ;4BAEE,MAAuB,oBADzBrB,oBAKEsB,SALF,EAKE,IALF,EAKEC,YAJehB,aAIf,EAJOiB,IAAe,IAAX;iCADbC,aAKEC,oBALF,EAKE;cAHCC,GAAG,EAAEH,IAAI,CAACI,KAGX;cAFCjB,KAAK,EAAEa,IAAI,CAACb,KAEb;cADCiB,KAAK,EAAEJ,IAAI,CAACI;YACb,CALF;;YAAA;WAKE,CALF;;UAAA,CACyB;;;;SAFzB;;QAAA,iBAOY;;;;OARV,CAJe,EAenB3B,aAEeS,uBAFf,EAEe;QAFDX,KAAK,EAAG,QAEP;QAFgBY,KAAK,EAAC,KAEtB;QAF4BC,IAAI,EAAC;MAEjC,CAFf;0BACE,MAA0F,CAA1FX,aAA0F4B,0BAA1F,EAA0F;sBAAhEtB,eAASuB,QAAuD;qEAAhEvB,eAASuB,WAAQf,OAA+C;UAA5CgB,GAAG,EAAE,CAAuC;UAAnCC,GAAG,EAAE,GAA8B;UAAxBC,QAAM,EAAEC;QAAgB,CAA1F;;QAAA,6BAA0F;;;;OAD5F,CAfmB,EAkBfjC,aAMeS,uBANf,EAMe;QANDX,KAAK,EAAE,QAMN;QANeY,KAAK,EAAC,UAMrB;QANgCC,IAAI,EAAC;MAMrC,CANf;0BACE,MAIY,CAJZX,aAIYY,mBAJZ,EAIY;UAHVsB,IAAI,EAAC,UAGK;sBAFD5B,eAAS6B,IAER;qEAFD7B,eAAS6B,OAAIrB,OAEZ;UADVsB,YAAY,EAAC;QACH,CAJZ;;QAAA,iBAIY;;;;OALd,CAlBe,EAyBfpC,aAEaS,uBAFb,EAEa;QAFCX,KAAK,EAAG,QAET;QAFkBY,KAAK,EAAC,kBAExB;QAF2CC,IAAI,EAAC;MAEhD,CAFb;0BACA,MAAkG,CAAlGX,aAAkGY,mBAAlG,EAAkG;UAAvFd,KAAK,EAAG,WAA+E;sBAA1DQ,eAAS+B,WAAiD;qEAA1D/B,eAAS+B,cAAWvB,OAAsC;UAApCoB,IAAI,EAAC,UAA+B;UAApBE,YAAY,EAAC;QAAO,CAAlG;;QAAA,iBAAkG;;;;OADlG,CAzBe,EA4BjBpC,aAkBmBS,uBAlBnB,EAkBmB;QAlBLC,KAAK,EAAC,mBAkBD;QAlBqBC,IAAI,EAAC;MAkB1B,CAlBnB;0BACM,MAgBM,CAhBNd,oBAgBM,KAhBN,cAgBM,CAfJG,aAKYY,mBALZ,EAKY;UAJV,eAAY,aAIF;sBAHDqB,gBAAWK,gBAGV;qEAHDL,gBAAWK,mBAAgBxB,OAG1B;UAFVG,WAAW,EAAC,mBAEF;UADV,iBAAc;QACJ,CALZ;;QAAA,iBAeI,EATJjB,aAQYuC,oBARZ,EAQY;UAPVL,IAAI,EAAC,SAOK;UANVM,KAAK,EAAL,EAMU;UALTC,OAAK,sCAAER,aAAO,gBAAP,CAAF,CAKI;UAJTS,QAAQ,EAAET,eAID;UAHVnC,KAAK,EAAC;QAGI,CARZ;4BAOE,MAAY,mCAATQ,eAAM;UAAA;WAAG;;;;SAPd;;QAAA,eASI,CAhBN,CAgBM;;;;OAjBZ,CA5BiB;;;;KAXjB;;IAAA,qBAD+B,EA4D/BT,oBAOM,KAPN,cAOM,CANJG,aAECuC,oBAFD,EAEC;MAFUL,IAAI,EAAC,SAEf;MAF0BO,OAAK,sCAAEE,oBAAU,UAAV,CAAF;IAE/B,CAFD;wBACG,MAAM;;;;KADT,CAMI,EAHJ3C,aAA2DuC,oBAA3D,EAA2D;MAA/CE,OAAK,sCAAEE,mBAAS,UAAT,CAAF;IAA0C,CAA3D;wBAA0C,MAAK;;;;KAA/C,CAGI,EAFJ3C,aAA2CuC,oBAA3C,EAA2C;MAA/BE,OAAK,EAAEE;IAAwB,CAA3C,EAAyB;wBAAE,MAAI,aAAN;;;;IAAA,CAAzB;;IAAA,cAEI,EADJ3C,aAAmEuC,oBAAnE,EAAmE;MAAvDE,OAAK,wCAAEE,sBAAF;IAAkD,CAAnE;wBAAkC,MAAqB;;;;KAAvD,CACI,CAPN,CA5D+B,EADR;;;;EAAA,CAAzB,CAsEI,CAvEN,CAwEM,CA1EN","names":["id","_createElementVNode","class","_createElementBlock","_createVNode","_component_HubIcon","_component_el_card","_hoisted_2","_component_el_form","model","$data","rules","ref","_component_el_form_item","label","prop","_component_el_input","uname","$event","checkusername","maxlength","placeholder","_component_el_select","checkgender","size","_Fragment","_renderList","item","_createBlock","_component_el_option","key","value","_component_el_input_number","checkage","min","max","onChange","_ctx","type","pass","autocomplete","confirmPass","verificationCode","_component_el_button","plain","onClick","disabled","$options"],"sourceRoot":"","sources":["D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\views\\RegisterPage.vue"],"sourcesContent":["<template>\r\n  <div id= 'building'>\r\n      <HubIcon></HubIcon>\r\n  <div>\r\n    <el-card class=\"box-card\">\r\n      <h2 class=\"color\">Register</h2>\r\n      <el-form\r\n        :model=\"ruleForm\"\r\n        status-icon\r\n        :rules=\"rules\"\r\n        ref=\"ruleForm\"\r\n        label-position=\"left\"\r\n        label-width=\"150px\"\r\n        class=\"demo-ruleForm\"\r\n      >\r\n        <el-form-item class= \"color1\" label=\"Email\" prop=\"uname\">\r\n          <el-input v-model=\"ruleForm.uname\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item class = \"color1\" label=\"Username\" prop=\"checkusername\">\r\n      <el-input class = \"inputform\" v-model=\"ruleForm.checkusername\" maxlength=16 placeholder=\"Jack\" />\r\n    </el-form-item>\r\n        <el-form-item class = \"color1\" label=\"Gender\" prop=\"checkgender\">\r\n      <el-select v-model=\"ruleForm.checkgender\" class=\"m-2\" placeholder=\"Select\" size=\"large\">\r\n      <el-option\r\n        v-for=\"item in options\"\r\n        :key=\"item.value\"\r\n        :label=\"item.label\"\r\n        :value=\"item.value\"\r\n      />\r\n      </el-select>\r\n    \r\n    </el-form-item>\r\n    <el-form-item class = \"color1\" label=\"Age\" prop=\"checkage\">\r\n      <el-input-number v-model=\"ruleForm.checkage\" :min=\"1\" :max=\"120\" @change=\"handleChange\" />\r\n    </el-form-item>\r\n        <el-form-item class= \"color1\" label=\"Password\" prop=\"pass\">\r\n          <el-input\r\n            type=\"password\"\r\n            v-model=\"ruleForm.pass\"\r\n            autocomplete=\"off\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item class = \"color1\" label=\"confirm password\" prop=\"confirmPass\">\r\n        <el-input  class = \"inputform\" v-model=\"ruleForm.confirmPass\" type=\"Password\" autocomplete=\"off\"/>\r\n      </el-form-item>\r\n      <el-form-item label=\"verification code\" prop=\"verificationCode\">\r\n            <div class=\"vertify\">\r\n              <el-input\r\n                prefix-icon=\"el-icon-key\"\r\n                v-model=\"forgotPass.verificationCode\"\r\n                placeholder=\"verification code\"\r\n                auto-complete=\"off\"\r\n              ></el-input>\r\n              <el-button\r\n                type=\"primary\"\r\n                plain\r\n                @click=\"getCode('forgotPassForm')\"\r\n                :disabled=\"isDisabled\"\r\n                class=\"emailcode\"\r\n              >\r\n                {{ btnMsg }}\r\n              </el-button>\r\n            </div>\r\n          </el-form-item>\r\n      </el-form>\r\n      <div class=\"btnGroup\">\r\n        <el-button type=\"primary\" @click=\"submitForm('ruleForm')\"\r\n          >submit</el-button\r\n        >\r\n        <el-button @click=\"resetForm('ruleForm')\">reset</el-button>\r\n        <el-button @click=\"goBack\">back</el-button>\r\n        <el-button @click=\"submitEmail()\">Get verification code</el-button>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport HubIcon from '@/components/HubIcon.vue';\r\nimport request from \"@/utils/RequestFile.js\"\r\nexport default {\r\n  data() {\r\n      var validatePass = (rule, value, callback) => {\r\n        if (value === '') {\r\n        callback(new Error('Please input the password'))\r\n        }else if(value!=='' && ((this.ruleForm.pass.length < 8 || this.ruleForm.pass.length > 16))){\r\n          console.log(\"incorrect password form!!\")\r\n          callback(new Error('Please input correct form of password'))\r\n        }else{\r\n          callback()\r\n        }\r\n        \r\n      }\r\n      ;\r\n      var validatePass1 = (rule, value, callback) => {\r\n         var reg = /^([A-Za-z0-9]+[.-_])*[A-Za-z0-9]+@[A-Za-z0-9-]+(\\.[A-Z|a-z]{2,})+$/;\r\n          if (!value) {\r\n            return callback(new Error('cannot input empty email!'))\r\n          } else if (!reg.test(value)) {\r\n            return callback(new Error('please input valid email!'))\r\n          } else {\r\n            callback()\r\n          }\r\n  \r\n      };\r\n      var validatePass3 = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('Please input the password again'))\r\n      } else if (value !== this.ruleForm.pass) {\r\n        callback(new Error(\"Two inputs don't match!\"))\r\n      } else {\r\n        callback()\r\n      }\r\n      };\r\n      var validatePass4 = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('Please input the username'))\r\n        } else {\r\n          callback()\r\n        }\r\n      };\r\n\r\n      var validatePass5 = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('Please input the age'))\r\n        } else {\r\n          callback()\r\n        }\r\n      };\r\n      var validatePass6 = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('Please choose the gender'))\r\n        } else {\r\n          callback()\r\n        }\r\n      }\r\n      var validatePass7 = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('Please input the verification code'))\r\n        } else {\r\n          callback()\r\n        }\r\n      }\r\n      return {\r\n        btnMsg: \"get code\",\r\n        options: [\r\n          {\r\n          value: 'Male',\r\n          label: 'Male',\r\n        },\r\n        {\r\n          value: 'Female',\r\n          label: 'Female',\r\n        },\r\n    \r\n        ],\r\n          \r\n          ruleForm: {\r\n              uname: \"\",\r\n              pass: \"\",\r\n              password: \"\",\r\n              checkgender: \"\",\r\n              checkusername: \"\",\r\n              confirmPass: \"\",\r\n              checkage: \"\"\r\n          },\r\n          rules: {\r\n              uname: [\r\n                  { required: true, validator: validatePass1, trigger: \"blur\" },\r\n              ],\r\n              pass: [{ required: true, validator: validatePass, trigger: \"blur\" }],\r\n              confirmPass : [{required: true, validator: validatePass3, trigger: \"blur\"}],\r\n              checkusername : [{required: true, validator: validatePass4, trigger: \"blur\"}],\r\n              checkage : [{required: true, validator: validatePass5, trigger: \"blur\"}],\r\n              checkgender: [{required: true, validator: validatePass6, trigger: \"blur\"}],\r\n              //password: [{required: true, validator: validatePass7, trigger: \"blur\"}],\r\n             \r\n          },\r\n      };\r\n  },\r\n  methods: {\r\n   \r\n      submitEmail() {\r\n        if (this.ruleForm.uname!==''){\r\n          request.post(\"/user/email\", {email: this.ruleForm.uname}).then(res => {\r\n            console.log(\"successfully sent\")\r\n          })\r\n \r\n        }else{\r\n          alert(\"input email to get verification code!!!\")\r\n        }\r\n      } ,\r\n      \r\n      submitForm(formName) {\r\n        this.$refs[formName].validate((valid) => {\r\n          if (valid && this.ruleForm.password!=='') {\r\n              console.log(\"register!\");\r\n              request.post(\"/user/register\", {email: this.ruleForm.uname, password: this.ruleForm.pass, \r\n                verificationCode: this.ruleForm.password, age: this.ruleForm.checkage, gender: this.ruleForm.checkgender,\r\n                  username: this.ruleForm.checkusername}).then(res => {\r\n                  if(res.status === 200){\r\n                    this.$message({\r\n                    type: \"success\",\r\n                    message: \"successfully registered\"\r\n                    })\r\n                      this.$router.push('/moviehub/loginpage');\r\n                  }else {\r\n                  this.$message({\r\n                    type: \"error\",\r\n                    message: res.message\r\n                  })\r\n                }\r\n              })\r\n          }else{\r\n            alert(\"input verification code please!!!\")\r\n          }\r\n      })\r\n      },\r\n      resetForm(formName) {\r\n          this.$refs[formName].resetFields();\r\n      },\r\n      goBack() {\r\n          this.$router.go(-1);\r\n      },\r\n  },\r\n  components: { HubIcon }\r\n  \r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.box-card {\r\n  margin: auto auto;\r\n  width: 600px;\r\n}\r\n.login-from {\r\n  margin: auto auto;\r\n}\r\n#building{\r\nbackground:url('https://wallpapercave.com/dwp2x/wp11089675.jpg');\r\nwidth:100%;\r\nheight:100%;\r\nposition:fixed;\r\nbackground-size:100% 100%;\r\n}\r\n.color {\r\n  color: orange;\r\n}\r\n.color1 .el-form-item__label{\r\n  color : orange;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}