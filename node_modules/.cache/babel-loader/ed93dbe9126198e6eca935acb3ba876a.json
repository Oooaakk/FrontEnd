{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-216897e8\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  id: \"building\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"color\"\n}, \"Register\", -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = {\n  class: \"btnGroup\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\"提交\");\n\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\"重置\");\n\nconst _hoisted_6 = /*#__PURE__*/_createTextVNode(\"返回\");\n\nconst _hoisted_7 = /*#__PURE__*/_createTextVNode(\"Get verification code\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_HubIcon = _resolveComponent(\"HubIcon\");\n\n  const _component_el_input = _resolveComponent(\"el-input\");\n\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n\n  const _component_el_option = _resolveComponent(\"el-option\");\n\n  const _component_el_select = _resolveComponent(\"el-select\");\n\n  const _component_el_form = _resolveComponent(\"el-form\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_card = _resolveComponent(\"el-card\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_HubIcon), _createElementVNode(\"div\", null, [_createVNode(_component_el_card, {\n    class: \"box-card\"\n  }, {\n    default: _withCtx(() => [_hoisted_2, _createVNode(_component_el_form, {\n      model: $data.ruleForm,\n      \"status-icon\": \"\",\n      rules: $data.rules,\n      ref: \"ruleForm\",\n      \"label-position\": \"left\",\n      \"label-width\": \"150px\",\n      class: \"demo-ruleForm\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        class: \"color1\",\n        label: \"Email\",\n        prop: \"uname\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.ruleForm.uname,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.ruleForm.uname = $event)\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\"])]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_el_form_item, {\n        class: \"languagecolour\",\n        label: \"Gender\",\n        prop: \"checkgender\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $data.ruleForm.checkgender,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.ruleForm.checkgender = $event),\n          class: \"m-2\",\n          placeholder: \"Select\",\n          size: \"large\"\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.options, item => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: item.value,\n              label: item.label,\n              value: item.value\n            }, null, 8\n            /* PROPS */\n            , [\"label\", \"value\"]);\n          }), 128\n          /* KEYED_FRAGMENT */\n          ))]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"modelValue\"])]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_el_form_item, {\n        class: \"color1\",\n        label: \"Password\",\n        prop: \"pass\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          type: \"password\",\n          modelValue: $data.ruleForm.pass,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.ruleForm.pass = $event),\n          autocomplete: \"off\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\"])]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_el_form_item, {\n        class: \"color1\",\n        label: \"Verification code\",\n        prop: \"password\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          type: \"password\",\n          modelValue: $data.ruleForm.password,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.ruleForm.password = $event),\n          autocomplete: \"off\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\"])]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"model\", \"rules\"]), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: _cache[4] || (_cache[4] = $event => $options.submitForm())\n    }, {\n      default: _withCtx(() => [_hoisted_4]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_button, {\n      onClick: _cache[5] || (_cache[5] = $event => $options.resetForm('ruleForm'))\n    }, {\n      default: _withCtx(() => [_hoisted_5]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_button, {\n      onClick: $options.goBack\n    }, {\n      default: _withCtx(() => [_hoisted_6]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"onClick\"]), _createVNode(_component_el_button, {\n      onClick: _cache[6] || (_cache[6] = $event => $options.submitEmail())\n    }, {\n      default: _withCtx(() => [_hoisted_7]),\n      _: 1\n      /* STABLE */\n\n    })])]),\n    _: 1\n    /* STABLE */\n\n  })])]);\n}","map":{"version":3,"mappings":"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","names":["id","_createElementVNode","class","_createElementBlock","_createVNode","_component_HubIcon","_component_el_card","_hoisted_2","_component_el_form","model","$data","rules","ref","_component_el_form_item","label","prop","_component_el_input","uname","$event","_component_el_select","checkgender","placeholder","size","_Fragment","_renderList","_ctx","item","_createBlock","_component_el_option","key","value","type","pass","autocomplete","password","_component_el_button","onClick","$options"],"sourceRoot":"","sources":["D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\views\\RegisterPage.vue"],"sourcesContent":["<template>\r\n  <div id= 'building'>\r\n      <HubIcon></HubIcon>\r\n  <div>\r\n    <el-card class=\"box-card\">\r\n      <h2 class=\"color\">Register</h2>\r\n      <el-form\r\n        :model=\"ruleForm\"\r\n        status-icon\r\n        :rules=\"rules\"\r\n        ref=\"ruleForm\"\r\n        label-position=\"left\"\r\n        label-width=\"150px\"\r\n        class=\"demo-ruleForm\"\r\n      >\r\n        <el-form-item class= \"color1\" label=\"Email\" prop=\"uname\">\r\n          <el-input v-model=\"ruleForm.uname\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item class = \"languagecolour\" label=\"Gender\" prop=\"checkgender\">\r\n      <el-select v-model=\"ruleForm.checkgender\" class=\"m-2\" placeholder=\"Select\" size=\"large\">\r\n      <el-option\r\n        v-for=\"item in options\"\r\n        :key=\"item.value\"\r\n        :label=\"item.label\"\r\n        :value=\"item.value\"\r\n      />\r\n    </el-select>\r\n    </el-form-item>\r\n        <el-form-item class= \"color1\" label=\"Password\" prop=\"pass\">\r\n          <el-input\r\n            type=\"password\"\r\n            v-model=\"ruleForm.pass\"\r\n            autocomplete=\"off\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item class= \"color1\" label=\"Verification code\" prop=\"password\">\r\n          <el-input\r\n            type=\"password\"\r\n            v-model=\"ruleForm.password\"\r\n            autocomplete=\"off\"\r\n          ></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div class=\"btnGroup\">\r\n        <el-button type=\"primary\" @click=\"submitForm()\"\r\n          >提交</el-button\r\n        >\r\n        <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\r\n        <el-button @click=\"goBack\">返回</el-button>\r\n        <el-button @click=\"submitEmail()\">Get verification code</el-button>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport HubIcon from '@/components/HubIcon.vue';\r\nimport request from \"@/utils/RequestFile.js\"\r\nexport default {\r\n  data() {\r\n      var validatePass = (rule, value, callback) => {\r\n          if (value === \"\") {\r\n              callback(new Error(\"请输入密码\"));\r\n          }\r\n          else {\r\n              if (this.ruleForm.checkPass !== \"\") {\r\n                  this.$refs.ruleForm.validateField(\"checkPass\");\r\n              }\r\n              callback();\r\n          }\r\n      };\r\n      \r\n      return {\r\n          \r\n          ruleForm: {\r\n              uname: \"\",\r\n              pass: \"\",\r\n              password: \"\",\r\n          },\r\n          rules: {\r\n              uname: [\r\n                  { required: true, message: \"用户名不能为空！\", trigger: \"blur\" },\r\n              ],\r\n              pass: [{ required: true, validator: validatePass, trigger: \"blur\" }],\r\n             \r\n          },\r\n      };\r\n  },\r\n  methods: {\r\n      submitEmail() {\r\n    // 验证表单中的账号密码是否有效，因为在上面rules中定义为了必填 required: true\r\n     \r\n          console.log('submit!')\r\n          request.post(\"/user/email\", {email: this.ruleForm.uname}).then(res => {\r\n          \r\n          console.log(\"success\");\r\n        \r\n      })\r\n        \r\n      \r\n  },\r\n      submitForm() {\r\n          console.log(\"register!\");\r\n          request.post(\"/user/register\", {email: this.ruleForm.uname, password: this.ruleForm.pass, verificationCode: this.ruleForm.password}).then(res => {\r\n              if(res.status === 200){\r\n                this.$message({\r\n                type: \"success\",\r\n                message: \"successfully registered\"\r\n                })\r\n                  this.$router.push('/moviehub/loginpage');\r\n              }else {\r\n              this.$message({\r\n                type: \"error\",\r\n                message: res.message\r\n              })\r\n            }\r\n          })\r\n      },\r\n      resetForm(formName) {\r\n          this.$refs[formName].resetFields();\r\n      },\r\n      goBack() {\r\n          this.$router.go(-1);\r\n      },\r\n  },\r\n  components: { HubIcon }\r\n  \r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.box-card {\r\n  margin: auto auto;\r\n  width: 600px;\r\n}\r\n.login-from {\r\n  margin: auto auto;\r\n}\r\n#building{\r\nbackground:url('https://wallpapercave.com/dwp2x/wp11089675.jpg');\r\nwidth:100%;\r\nheight:100%;\r\nposition:fixed;\r\nbackground-size:100% 100%;\r\n}\r\n.color {\r\n  color: orange;\r\n}\r\n.color1 .el-form-item__label{\r\n  color : orange;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}