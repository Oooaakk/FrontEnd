{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, normalizeClass as _normalizeClass, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-216897e8\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  id: \"building\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"color\"\n}, \"Register Moviehub\", -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = {\n  class: \"vertify\"\n};\nconst _hoisted_4 = {\n  class: \"btnGroup\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_HubIcon = _resolveComponent(\"HubIcon\");\n\n  const _component_el_input = _resolveComponent(\"el-input\");\n\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n\n  const _component_el_option = _resolveComponent(\"el-option\");\n\n  const _component_el_select = _resolveComponent(\"el-select\");\n\n  const _component_el_input_number = _resolveComponent(\"el-input-number\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_form = _resolveComponent(\"el-form\");\n\n  const _component_el_card = _resolveComponent(\"el-card\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_HubIcon), _createElementVNode(\"div\", null, [_createVNode(_component_el_card, {\n    class: \"box-card\"\n  }, {\n    default: _withCtx(() => [_hoisted_2, _createVNode(_component_el_form, {\n      model: $data.ruleForm,\n      \"status-icon\": \"\",\n      rules: $data.rules,\n      ref: \"ruleForm\",\n      \"label-position\": \"left\",\n      \"label-width\": \"150px\",\n      class: \"demo-ruleForm\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"email\",\n        prop: \"email\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          type: \"email\",\n          modelValue: $data.ruleForm.email,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.ruleForm.email = $event),\n          \"prefix-icon\": \"el-icon-message\",\n          placeholder: \"type in email\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\"])]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_el_form_item, {\n        class: \"color1\",\n        label: \"Username\",\n        prop: \"checkusername\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          class: \"inputform\",\n          modelValue: $data.ruleForm.checkusername,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.ruleForm.checkusername = $event),\n          maxlength: \"16\",\n          placeholder: \"Jack\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\"])]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_el_form_item, {\n        class: \"color1\",\n        label: \"Gender\",\n        prop: \"checkgender\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $data.ruleForm.checkgender,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.ruleForm.checkgender = $event),\n          class: \"m-2\",\n          placeholder: \"Select\",\n          size: \"large\"\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.options, item => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: item.value,\n              label: item.label,\n              value: item.value\n            }, null, 8\n            /* PROPS */\n            , [\"label\", \"value\"]);\n          }), 128\n          /* KEYED_FRAGMENT */\n          ))]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"modelValue\"])]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_el_form_item, {\n        class: \"color1\",\n        label: \"Age\",\n        prop: \"checkage\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input_number, {\n          modelValue: $data.ruleForm.checkage,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.ruleForm.checkage = $event),\n          min: 1,\n          max: 120,\n          onChange: _ctx.handleChange\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"onChange\"])]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_el_form_item, {\n        label: \"password\",\n        prop: \"password\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          type: $data.pwdType,\n          modelValue: $data.ruleForm.password,\n          \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.ruleForm.password = $event),\n          \"prefix-icon\": \"el-icon-lock\",\n          placeholder: \"type in password\"\n        }, {\n          default: _withCtx(() => [_createElementVNode(\"i\", {\n            title: \"show or hide password\",\n            class: _normalizeClass($options.showPwd),\n            style: {\n              color: '#409eff',\n              cursor: 'pointer'\n            },\n            onClick: _cache[4] || (_cache[4] = (...args) => $options.togglePwd && $options.togglePwd(...args))\n          }, null, 2\n          /* CLASS */\n          )]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"type\", \"modelValue\"])]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_el_form_item, {\n        label: \"confirm password\",\n        prop: \"password2\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          type: $data.pwdType,\n          modelValue: $data.ruleForm.password2,\n          \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.ruleForm.password2 = $event),\n          \"prefix-icon\": \"el-icon-lock\",\n          placeholder: \"confirm password\"\n        }, {\n          default: _withCtx(() => [_createElementVNode(\"i\", {\n            title: \"show or hide password\",\n            class: _normalizeClass($options.showPwd),\n            style: {\n              color: '#409eff',\n              cursor: 'pointer'\n            },\n            onClick: _cache[6] || (_cache[6] = (...args) => $options.togglePwd && $options.togglePwd(...args))\n          }, null, 2\n          /* CLASS */\n          )]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"type\", \"modelValue\"])]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_el_form_item, {\n        label: \"verification code\",\n        prop: \"verificationCode\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_input, {\n          \"prefix-icon\": \"el-icon-key\",\n          modelValue: $data.ruleForm.verificationCode,\n          \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.ruleForm.verificationCode = $event),\n          placeholder: \"verification code\",\n          \"auto-complete\": \"off\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\"]), _createVNode(_component_el_button, {\n          type: \"primary\",\n          plain: \"\",\n          onClick: _cache[9] || (_cache[9] = $event => $options.getCode('ruleForm')),\n          disabled: $data.isDisabled,\n          class: \"emailcode\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString($data.btnMsg), 1\n          /* TEXT */\n          )]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"disabled\"])])]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"model\", \"rules\"]), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: _cache[10] || (_cache[10] = $event => $options.submitForm('ruleForm'))\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"submit\")]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_button, {\n      onClick: _cache[11] || (_cache[11] = $event => $options.resetForm('ruleForm'))\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"reset\")]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_button, {\n      onClick: $options.goBack\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"back\")]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"onClick\"])])]),\n    _: 1\n    /* STABLE */\n\n  })])]);\n}","map":{"version":3,"mappings":"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","names":["id","_createElementVNode","class","_createElementBlock","_createVNode","_component_HubIcon","_component_el_card","_hoisted_2","_component_el_form","model","$data","rules","ref","_component_el_form_item","label","prop","_component_el_input","type","email","$event","placeholder","checkusername","maxlength","_component_el_select","checkgender","size","_Fragment","_renderList","item","_createBlock","_component_el_option","key","value","_component_el_input_number","checkage","min","max","onChange","_ctx","password","title","$options","style","color","cursor","onClick","password2","verificationCode","_component_el_button","plain","disabled"],"sourceRoot":"","sources":["D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\views\\RegisterPage.vue"],"sourcesContent":["<template>\r\n  <div id= 'building'>\r\n      <HubIcon></HubIcon>\r\n  <div>\r\n    <el-card class=\"box-card\">\r\n      <h2 class=\"color\">Register Moviehub</h2>\r\n      <el-form\r\n        :model=\"ruleForm\"\r\n        status-icon\r\n        :rules=\"rules\"\r\n        ref=\"ruleForm\"\r\n        label-position=\"left\"\r\n        label-width=\"150px\"\r\n        class=\"demo-ruleForm\"\r\n      >\r\n      <el-form-item label=\"email\" prop=\"email\">\r\n            <el-input\r\n              type=\"email\"\r\n              v-model=\"ruleForm.email\"\r\n              prefix-icon=\"el-icon-message\"\r\n              placeholder=\"type in email\"\r\n            >\r\n            </el-input>\r\n          </el-form-item>\r\n        <el-form-item class = \"color1\" label=\"Username\" prop=\"checkusername\">\r\n      <el-input class = \"inputform\" v-model=\"ruleForm.checkusername\" maxlength=16 placeholder=\"Jack\" />\r\n    </el-form-item>\r\n        <el-form-item class = \"color1\" label=\"Gender\" prop=\"checkgender\">\r\n      <el-select v-model=\"ruleForm.checkgender\" class=\"m-2\" placeholder=\"Select\" size=\"large\">\r\n      <el-option\r\n        v-for=\"item in options\"\r\n        :key=\"item.value\"\r\n        :label=\"item.label\"\r\n        :value=\"item.value\"\r\n      />\r\n      </el-select>\r\n    \r\n    </el-form-item>\r\n    <el-form-item class = \"color1\" label=\"Age\" prop=\"checkage\">\r\n      <el-input-number v-model=\"ruleForm.checkage\" :min=\"1\" :max=\"120\" @change=\"handleChange\" />\r\n    </el-form-item>\r\n    <el-form-item label=\"password\" prop=\"password\">\r\n            <el-input\r\n              :type=\"pwdType\"\r\n              v-model=\"ruleForm.password\"\r\n              prefix-icon=\"el-icon-lock\"\r\n              placeholder=\"type in password\"\r\n            >\r\n              <i\r\n        \r\n                title=\"show or hide password\"\r\n                :class=\"showPwd\"\r\n                :style=\"{ color: '#409eff', cursor: 'pointer' }\"\r\n                @click=\"togglePwd\"\r\n              >\r\n              </i>\r\n            </el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"confirm password\" prop=\"password2\">\r\n            <el-input\r\n              :type=\"pwdType\"\r\n              v-model=\"ruleForm.password2\"\r\n              prefix-icon=\"el-icon-lock\"\r\n              placeholder=\"confirm password\"\r\n            >\r\n              <i\r\n     \r\n                title=\"show or hide password\"\r\n                :class=\"showPwd\"\r\n                :style=\"{ color: '#409eff', cursor: 'pointer' }\"\r\n                @click=\"togglePwd\"\r\n              >\r\n              </i>\r\n            </el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"verification code\" prop=\"verificationCode\">\r\n            <div class=\"vertify\">\r\n              <el-input\r\n                prefix-icon=\"el-icon-key\"\r\n                v-model=\"ruleForm.verificationCode\"\r\n                placeholder=\"verification code\"\r\n                auto-complete=\"off\"\r\n              ></el-input>\r\n              <el-button\r\n                type=\"primary\"\r\n                plain\r\n                @click=\"getCode('ruleForm')\"\r\n                :disabled=\"isDisabled\"\r\n                class=\"emailcode\"\r\n              >\r\n                {{ btnMsg }}\r\n              </el-button>\r\n            </div>\r\n          </el-form-item>\r\n      </el-form>\r\n      <div class=\"btnGroup\">\r\n        <el-button type=\"primary\" @click=\"submitForm('ruleForm')\"\r\n          >submit</el-button\r\n        >\r\n        <el-button @click=\"resetForm('ruleForm')\">reset</el-button>\r\n        <el-button @click=\"goBack\">back</el-button>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport HubIcon from '@/components/HubIcon.vue';\r\nimport request from \"@/utils/RequestFile.js\"\r\nexport default {\r\n  data() {\r\n    \r\n      var validatePass = (rule, value, callback) => {\r\n        if (value === '') {\r\n        callback(new Error('Please input the password'))\r\n        }else if(value!=='' && ((this.ruleForm.pass.length < 5 || this.ruleForm.pass.length > 16))){\r\n          console.log(\"incorrect password form!!\")\r\n          callback(new Error('Please input correct form of password'))\r\n        }else{\r\n          callback()\r\n        }\r\n        \r\n      }\r\n      ;\r\n      var validatePass1 = (rule, value, callback) => {\r\n         var reg = /^([A-Za-z0-9]+[.-_])*[A-Za-z0-9]+@[A-Za-z0-9-]+(\\.[A-Z|a-z]{2,})+$/;\r\n          if (!value) {\r\n            return callback(new Error('cannot input empty email!'))\r\n          } else if (!reg.test(value)) {\r\n            return callback(new Error('please input valid email!'))\r\n          } else {\r\n            callback()\r\n          }\r\n  \r\n      };\r\n      var validatePass3 = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('Please input the password again'))\r\n      } else if (value !== this.ruleForm.password) {\r\n        callback(new Error(\"Two inputs don't match!\"))\r\n      } else {\r\n        callback()\r\n      }\r\n      };\r\n      var validatePass4 = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('Please input the username'))\r\n        } else {\r\n          callback()\r\n        }\r\n      };\r\n\r\n      var validatePass5 = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('Please input the age'))\r\n        } else {\r\n          callback()\r\n        }\r\n      };\r\n      var validatePass6 = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('Please choose the gender'))\r\n        } else {\r\n          callback()\r\n        }\r\n      }\r\n      var validatePass7 = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('Please input the verification code'))\r\n        } else {\r\n          callback()\r\n        }\r\n      }\r\n      return {\r\n        pwdType: \"password\",\r\n            isShowPwd: false,\r\n            btnMsg: \"get code\",\r\n            isDisabled: false,\r\n            time: 30,\r\n            \r\n        options: [\r\n          {\r\n          value: 'Male',\r\n          label: 'Male',\r\n        },\r\n        {\r\n          value: 'Female',\r\n          label: 'Female',\r\n        },\r\n    \r\n        ],\r\n          \r\n          ruleForm: {\r\n              email: \"\",\r\n              password: \"\",\r\n              password2: \"\",\r\n              checkgender: \"\",\r\n              checkusername: \"\",\r\n              confirmPass: \"\",\r\n              checkage: \"\",\r\n              verificationCode:\"\",\r\n          },\r\n          rules: {\r\n            email: [\r\n                    { required: true, message: \"email cannot be blank\", trigger: \"blur\" },\r\n                    { type: \"email\", message: \"input correct email\", trigger: \"change\" },\r\n                    { validator: validatePass1, trigger: \"blur\" }\r\n                ],\r\n                password: [\r\n                    { required: true, message: \"password cannot be blank\", trigger: \"blur\" },\r\n                    {\r\n                        min: 5,\r\n                        max: 16,\r\n                        message: \"length of password should be >5, <16\",\r\n                        trigger: \"blur\",\r\n                    },\r\n                    { validator: validatePass, trigger: \"blur\" }\r\n                ],\r\n                password2: [\r\n                    { required: true, message: \"confirm password cannot be blank\", trigger: \"blur\" },\r\n                    {\r\n                        min: 5,\r\n                        max: 16,\r\n                        message: \"length of confirm password should be >5, <16\",\r\n                        trigger: \"blur\",\r\n                    },\r\n                    { validator: validatePass3, trigger: \"blur\" },],\r\n\r\n              checkusername : [{required: true, validator: validatePass4, trigger: \"blur\"}],\r\n              checkage : [{required: true, validator: validatePass5, trigger: \"blur\"}],\r\n              checkgender: [{required: true, validator: validatePass6, trigger: \"blur\"}],\r\n             \r\n          },\r\n      };\r\n  },\r\n  computed: {\r\n        showPwd() {\r\n            return this.isShowPwd ? \"third-icon-alieye\" : \"third-icon-alino_eye\";\r\n        },\r\n    },\r\n  methods: {\r\n    togglePwd() {\r\n            this.pwdType === \"password\"\r\n                ? (this.pwdType = \"\")\r\n                : (this.pwdType = \"password\");\r\n            this.isShowPwd = !this.isShowPwd;\r\n        },\r\n        // verification code\r\n        getCode(formName) {\r\n            this.$refs[formName].validate((valid) => {\r\n                if (valid) {\r\n                    request\r\n                        .post(\"/user/register/email\", {\r\n                            email: this.ruleForm.email,\r\n                 \r\n                    })\r\n                        .then((res) => {\r\n                        // console.log(res)\r\n                        if (res.status === 200) {\r\n                            console.log(\"nothing\");\r\n                        }\r\n                    }).catch((err) => {\r\n                      this.$message({\r\n                                message: \"email is sent\",\r\n                                type: \"success\",\r\n                            });\r\n                            this.isDisabled = true;\r\n                            let interval = setInterval(() => {\r\n                                this.btnMsg = \"\" + this.time + \"seconds\";\r\n                                --this.time;\r\n                                if (this.time < 0) {\r\n                                    this.btnMsg = \"get code\";\r\n                                    this.time = 30;\r\n                                    this.isDisabled = false;\r\n                                    clearInterval(interval);\r\n                                }\r\n                       }, 1000);\r\n                    });\r\n                }\r\n            });\r\n        },\r\n\r\n      submitForm(formName) {\r\n        this.$refs[formName].validate((valid) => {\r\n          if (valid && this.ruleForm.verificationCode!=='') {\r\n              console.log(\"register!\");\r\n              request.post(\"/user/register\", {email: this.ruleForm.email, password: this.ruleForm.password, \r\n                verificationCode: this.ruleForm.password2, age: this.ruleForm.checkage, gender: this.ruleForm.checkgender,\r\n                  username: this.ruleForm.checkusername}).then(res => {\r\n                  if(res.status === 200){\r\n                    this.$message({\r\n                    type: \"success\",\r\n                    message: \"successfully registered\"\r\n                    })\r\n                      this.$router.push('/moviehub/loginpage');\r\n                  }else{\r\n                  this.$message({\r\n                    type: \"error\",\r\n                    message: res.data.message\r\n                  })\r\n                }\r\n              })\r\n          }else{\r\n            alert(\"input verification code please!!!\")\r\n          }\r\n      })\r\n      },\r\n      resetForm(formName) {\r\n          this.$refs[formName].resetFields();\r\n      },\r\n      goBack() {\r\n          this.$router.go(-1);\r\n      },\r\n  },\r\n  components: { HubIcon }\r\n  \r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.box-card {\r\n  margin-top:20px;\r\n  margin-left:350px;\r\n  width: 600px;\r\n}\r\n.login-from {\r\n  margin: auto auto;\r\n}\r\n#building{\r\nbackground:url('https://wallpapercave.com/dwp2x/wp11089675.jpg');\r\nwidth:100%;\r\nheight:100%;\r\nposition:fixed;\r\nbackground-size:100% 100%;\r\n}\r\n.color {\r\n  color: orange;\r\n}\r\n.emailcode{\r\n  position:fixed;\r\n}\r\n.btnGroup{\r\n  margin-top:20px\r\n}\r\n.color1 .el-form-item__label{\r\n  color : orange;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}