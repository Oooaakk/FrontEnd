{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport router from \"@/router\";\nconst request = axios.create({\n  baseURL: \"https://moivehub-itproject-team004.herokuapp.com\",\n  timeout: 100000\n}); // 请求白名单，如果请求在白名单里面，将不会被拦截校验权限\n\nconst whiteUrls = [\"/moviehub/loginpage\", '/moviehub/registerpage']; // request 拦截器\n// 可以自请求发送前对请求做一些处理\n// 比如统一加token，对请求参数统一加密\n\nrequest.interceptors.request.use(config => {\n  config.headers['Content-Type'] = 'application/json;charset=utf-8'; // 取出sessionStorage里面缓存的用户信息\n\n  let userJson = localStorage.getItem(\"user\");\n\n  if (!whiteUrls.includes(config.url)) {\n    // 校验请求白名单\n    if (!userJson) {\n      router.push(\"/moviehub/loginpage\");\n    } else {\n      let user = JSON.parse(userJson);\n      config.headers['token'] = userJson; // 设置请求头\n    }\n  }\n\n  return config;\n}, error => {\n  return Promise.reject(error);\n}); // // response 拦截器\n// // 可以在接口响应后统一处理结果\n// request.interceptors.response.use(\n//   response => {\n//     let res = response.data\n//     // 如果是返回的文件\n//     if (response.config.responseType === 'blob') {\n//       return res\n//     }\n//     // 兼容服务端返回的字符串数据\n//     if (typeof res === 'string') {\n//       res = res ? JSON.parse(res) : res\n//     }\n//     // 验证token\n//     if (res.status !== 200) {\n//       console.error(\"token过期，重新登录\")\n//       router.push(\"/moveihub/loginpage\")\n//     }\n//     return res\n//   },\n//   error => {\n//     console.log('err' + error) // for debug\n//     return Promise.reject(error)\n//   }\n// )\n\nexport default request;","map":{"version":3,"names":["axios","router","request","create","baseURL","timeout","whiteUrls","interceptors","use","config","headers","userJson","localStorage","getItem","includes","url","push","user","JSON","parse","error","Promise","reject"],"sources":["D:/comp30022 frontend/comp30022-movie-review-website/moviehub_frontend/src/utils/RequestFile.js"],"sourcesContent":["import axios from 'axios'\r\nimport router from \"@/router\"\r\n\r\nconst request = axios.create({\r\n  baseURL: \"https://moivehub-itproject-team004.herokuapp.com\",\r\n  timeout: 100000\r\n})\r\n\r\n// 请求白名单，如果请求在白名单里面，将不会被拦截校验权限\r\nconst whiteUrls = [\"/moviehub/loginpage\", '/moviehub/registerpage']\r\n\r\n// request 拦截器\r\n// 可以自请求发送前对请求做一些处理\r\n// 比如统一加token，对请求参数统一加密\r\nrequest.interceptors.request.use(config => {\r\n  config.headers['Content-Type'] = 'application/json;charset=utf-8'\r\n\r\n  // 取出sessionStorage里面缓存的用户信息\r\n  let userJson = localStorage.getItem(\"user\")\r\n  if (!whiteUrls.includes(config.url)) {  // 校验请求白名单\r\n    if (!userJson) {\r\n      router.push(\"/moviehub/loginpage\")\r\n    } else {\r\n      let user = JSON.parse(userJson)\r\n      config.headers['token'] = userJson  // 设置请求头\r\n    }\r\n  }\r\n  return config\r\n}, error => {\r\n  return Promise.reject(error)\r\n})\r\n\r\n// // response 拦截器\r\n// // 可以在接口响应后统一处理结果\r\n// request.interceptors.response.use(\r\n//   response => {\r\n//     let res = response.data\r\n//     // 如果是返回的文件\r\n//     if (response.config.responseType === 'blob') {\r\n//       return res\r\n//     }\r\n//     // 兼容服务端返回的字符串数据\r\n//     if (typeof res === 'string') {\r\n//       res = res ? JSON.parse(res) : res\r\n//     }\r\n//     // 验证token\r\n//     if (res.status !== 200) {\r\n//       console.error(\"token过期，重新登录\")\r\n//       router.push(\"/moveihub/loginpage\")\r\n//     }\r\n//     return res\r\n//   },\r\n//   error => {\r\n//     console.log('err' + error) // for debug\r\n//     return Promise.reject(error)\r\n//   }\r\n// )\r\n\r\n\r\nexport default request"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,OAAO,GAAGF,KAAK,CAACG,MAAN,CAAa;EAC3BC,OAAO,EAAE,kDADkB;EAE3BC,OAAO,EAAE;AAFkB,CAAb,CAAhB,C,CAKA;;AACA,MAAMC,SAAS,GAAG,CAAC,qBAAD,EAAwB,wBAAxB,CAAlB,C,CAEA;AACA;AACA;;AACAJ,OAAO,CAACK,YAAR,CAAqBL,OAArB,CAA6BM,GAA7B,CAAiCC,MAAM,IAAI;EACzCA,MAAM,CAACC,OAAP,CAAe,cAAf,IAAiC,gCAAjC,CADyC,CAGzC;;EACA,IAAIC,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAf;;EACA,IAAI,CAACP,SAAS,CAACQ,QAAV,CAAmBL,MAAM,CAACM,GAA1B,CAAL,EAAqC;IAAG;IACtC,IAAI,CAACJ,QAAL,EAAe;MACbV,MAAM,CAACe,IAAP,CAAY,qBAAZ;IACD,CAFD,MAEO;MACL,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWR,QAAX,CAAX;MACAF,MAAM,CAACC,OAAP,CAAe,OAAf,IAA0BC,QAA1B,CAFK,CAE+B;IACrC;EACF;;EACD,OAAOF,MAAP;AACD,CAdD,EAcGW,KAAK,IAAI;EACV,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAhBD,E,CAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,eAAelB,OAAf"},"metadata":{},"sourceType":"module"}