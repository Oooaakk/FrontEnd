{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport request from \"@/utils/RequestFile.js\";\nimport HubIcon from \"@/components/HubIcon.vue\";\nexport default {\n  name: \"ForgotPassword\",\n\n  data() {\n    const validatePass2 = (rule, value, callback) => {\n      if (value !== this.forgotPass.password) {\n        callback(new Error(\"input same password!!!\"));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      pwdType: \"password\",\n      isShowPwd: false,\n      btnMsg: \"get code\",\n      isDisabled: false,\n      time: 30,\n      forgotPass: {\n        email: \"\",\n        password: \"\",\n        // password2: \"\",\n        verificationCode: \"\"\n      },\n      rules: {\n        email: [{\n          required: true,\n          message: \"email cannot be blank\",\n          trigger: \"blur\"\n        }, {\n          type: \"email\",\n          message: \"input correct email\",\n          trigger: \"change\"\n        }],\n        password: [{\n          required: true,\n          message: \"password cannot be blank\",\n          trigger: \"blur\"\n        }, {\n          min: 5,\n          max: 16,\n          message: \"length of password should be >5, <16\",\n          trigger: \"blur\"\n        }],\n        password2: [{\n          required: true,\n          message: \"confirm password cannot be blank\",\n          trigger: \"blur\"\n        }, {\n          min: 5,\n          max: 16,\n          message: \"length of confirm password should be >5, <16\",\n          trigger: \"blur\"\n        }, {\n          validator: validatePass2,\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n\n  computed: {\n    showPwd() {\n      return this.isShowPwd ? \"third-icon-alieye\" : \"third-icon-alino_eye\";\n    }\n\n  },\n  methods: {\n    togglePwd() {\n      this.pwdType === \"password\" ? this.pwdType = \"\" : this.pwdType = \"password\";\n      this.isShowPwd = !this.isShowPwd;\n    },\n\n    // verification code\n    getCode(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          request.post(\"/user/forgotPassword/email\", {\n            email: this.forgotPass.email\n          }).then(res => {\n            // console.log(res)\n            if (res.status === 200) {\n              console.log(\"nothing\");\n            }\n          }).catch(err => {\n            this.$message({\n              message: \"email is sent\",\n              type: \"success\"\n            });\n            console.log(err);\n            this.isDisabled = true;\n            let interval = setInterval(() => {\n              this.btnMsg = \"\" + this.time + \"seconds\";\n              --this.time;\n\n              if (this.time < 0) {\n                this.btnMsg = \"get code\";\n                this.time = 30;\n                this.isDisabled = false;\n                clearInterval(interval);\n              }\n            }, 1000);\n          });\n        } else {\n          this.$message({\n            message: \"complete the form first!\",\n            type: \"error\"\n          });\n        }\n      });\n    },\n\n    // change password\n    forgetPass(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          request.post(\"/user/forgotPassword\", this.forgotPass).then(res => {\n            // console.log(res)\n            if (res.status === 200) {\n              this.$message({\n                message: res.data.message,\n                type: \"success\"\n              });\n              setTimeout(() => {\n                history.pushState({}, \"\", \"/moviehub/loginpage\"); //loginpage\n\n                location.reload();\n              }, 1000);\n            } else {\n              this.$message({\n                message: res.data.message,\n                type: \"error\"\n              });\n            }\n          }).catch(err => {\n            this.$message({\n              message: \"system error!\",\n              type: \"error\"\n            });\n            console.log(\"Error\", err);\n          });\n        } else {\n          this.$message({\n            message: \"complete the form first!\",\n            type: \"error\"\n          });\n        }\n      });\n    }\n\n  },\n  components: {\n    HubIcon\n  }\n};","map":{"version":3,"mappings":"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","names":["request","HubIcon","name","data","validatePass2","rule","value","callback","forgotPass","password","Error","pwdType","isShowPwd","btnMsg","isDisabled","time","email","verificationCode","rules","required","message","trigger","type","min","max","password2","validator","computed","showPwd","methods","togglePwd","getCode","formName","$refs","validate","valid","post","then","res","status","console","log","catch","err","$message","interval","setInterval","clearInterval","forgetPass","setTimeout","history","pushState","location","reload","components"],"sourceRoot":"","sources":["D:\\comp30022 frontend\\comp30022-movie-review-website\\src\\views\\ForgetPassword.vue"],"sourcesContent":["<template>\r\n  <div class=\"forgotpwd\">\r\n    <section class=\"form_title\">\r\n      <div class=\"manage_title\">\r\n        <el-form\r\n          :model=\"forgotPass\"\r\n          :rules=\"rules\"\r\n          ref=\"forgotPassForm\"\r\n          label-width=\"80px\"\r\n          class=\"registerForm\"\r\n          hide-required-asterisk\r\n          \r\n        >\r\n          <div class=\"forgot_title\">\r\n            <h3>forget password</h3>\r\n          </div>\r\n          <el-form-item label=\"email\" prop=\"email\">\r\n            <el-input\r\n              type=\"email\"\r\n              v-model=\"forgotPass.email\"\r\n              prefix-icon=\"el-icon-message\"\r\n              placeholder=\"type in email\"\r\n            >\r\n            </el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"password\" prop=\"password\">\r\n            <el-input\r\n              :type=\"pwdType\"\r\n              v-model=\"forgotPass.password\"\r\n              prefix-icon=\"el-icon-lock\"\r\n              placeholder=\"type in password\"\r\n            >\r\n              <i\r\n        \r\n                title=\"show or hide password\"\r\n                :class=\"showPwd\"\r\n                :style=\"{ color: '#409eff', cursor: 'pointer' }\"\r\n                @click=\"togglePwd\"\r\n              >\r\n              </i>\r\n            </el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"confirm password\" prop=\"password2\">\r\n            <el-input\r\n              :type=\"pwdType\"\r\n              v-model=\"forgotPass.password2\"\r\n              prefix-icon=\"el-icon-lock\"\r\n              placeholder=\"confirm password\"\r\n            >\r\n              <i\r\n     \r\n                title=\"show or hide password\"\r\n                :class=\"showPwd\"\r\n                :style=\"{ color: '#409eff', cursor: 'pointer' }\"\r\n                @click=\"togglePwd\"\r\n              >\r\n              </i>\r\n            </el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"verification code\" prop=\"verificationCode\">\r\n            <div class=\"vertify\">\r\n              <el-input\r\n                prefix-icon=\"el-icon-key\"\r\n                v-model=\"forgotPass.verificationCode\"\r\n                placeholder=\"verification code\"\r\n                auto-complete=\"off\"\r\n              ></el-input>\r\n              <el-button\r\n                type=\"primary\"\r\n                plain\r\n                @click=\"getCode('forgotPassForm')\"\r\n                :disabled=\"isDisabled\"\r\n                class=\"emailcode\"\r\n              >\r\n                {{ btnMsg }}\r\n              </el-button>\r\n            </div>\r\n          </el-form-item>\r\n          <div class=\"forgot_button\">\r\n            <el-button type=\"primary\" @click=\"forgetPass('forgotPassForm')\" class=\"confirm\"\r\n              >submit</el-button\r\n            >\r\n          </div>\r\n          <div class=\"tip_area\">\r\n            <router-link to=\"/moviehub/loginpage\">go to login</router-link>\r\n            <p>If there is no verification code,check spam email </p>\r\n          </div>\r\n        </el-form>\r\n      </div>\r\n    </section>\r\n  </div>\r\n  <HubIcon/>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/RequestFile.js\"\r\nimport HubIcon from \"@/components/HubIcon.vue\"\r\nexport default {\r\n    name: \"ForgotPassword\",\r\n    data() {\r\n        const validatePass2 = (rule, value, callback) => {\r\n            if (value !== this.forgotPass.password) {\r\n                callback(new Error(\"input same password!!!\"));\r\n            }\r\n            else {\r\n                callback();\r\n            }\r\n        };\r\n        return {\r\n            pwdType: \"password\",\r\n            isShowPwd: false,\r\n            btnMsg: \"get code\",\r\n            isDisabled: false,\r\n            time: 30,\r\n            forgotPass: {\r\n                email: \"\",\r\n                password: \"\",\r\n                // password2: \"\",\r\n                verificationCode: \"\",\r\n            },\r\n            rules: {\r\n                email: [\r\n                    { required: true, message: \"email cannot be blank\", trigger: \"blur\" },\r\n                    { type: \"email\", message: \"input correct email\", trigger: \"change\" },\r\n                ],\r\n                password: [\r\n                    { required: true, message: \"password cannot be blank\", trigger: \"blur\" },\r\n                    {\r\n                        min: 5,\r\n                        max: 16,\r\n                        message: \"length of password should be >5, <16\",\r\n                        trigger: \"blur\",\r\n                    },\r\n                ],\r\n                password2: [\r\n                    { required: true, message: \"confirm password cannot be blank\", trigger: \"blur\" },\r\n                    {\r\n                        min: 5,\r\n                        max: 16,\r\n                        message: \"length of confirm password should be >5, <16\",\r\n                        trigger: \"blur\",\r\n                    },\r\n                    { validator: validatePass2, trigger: \"blur\" },\r\n                ],\r\n            },\r\n        };\r\n    },\r\n    computed: {\r\n        showPwd() {\r\n            return this.isShowPwd ? \"third-icon-alieye\" : \"third-icon-alino_eye\";\r\n        },\r\n    },\r\n    methods: {\r\n        togglePwd() {\r\n            this.pwdType === \"password\"\r\n                ? (this.pwdType = \"\")\r\n                : (this.pwdType = \"password\");\r\n            this.isShowPwd = !this.isShowPwd;\r\n        },\r\n        // verification code\r\n        getCode(formName) {\r\n            this.$refs[formName].validate((valid) => {\r\n                if (valid) {\r\n                    request\r\n                        .post(\"/user/forgotPassword/email\", {\r\n                            email: this.forgotPass.email,\r\n                 \r\n                    })\r\n                        .then((res) => {\r\n                        // console.log(res)\r\n                        if (res.status === 200) {\r\n                            console.log(\"nothing\");\r\n                        }\r\n                    }).catch((err) => {\r\n                      this.$message({\r\n                                message: \"email is sent\",\r\n                                type: \"success\",\r\n                            });\r\n                            console.log(err);\r\n                            this.isDisabled = true;\r\n                            let interval = setInterval(() => {\r\n                                this.btnMsg = \"\" + this.time + \"seconds\";\r\n                                --this.time;\r\n                                if (this.time < 0) {\r\n                                    this.btnMsg = \"get code\";\r\n                                    this.time = 30;\r\n                                    this.isDisabled = false;\r\n                                    clearInterval(interval);\r\n                                }\r\n                       }, 1000);\r\n                    });\r\n                }else{\r\n                  this.$message({\r\n                     message: \"complete the form first!\",\r\n                     type: \"error\",\r\n                   })\r\n                }\r\n            });\r\n        },\r\n        // change password\r\n        forgetPass(formName) {\r\n            this.$refs[formName].validate((valid) => {\r\n                if (valid) {\r\n                    request\r\n                        .post(\"/user/forgotPassword\", this.forgotPass)\r\n                        .then((res) => {\r\n                        // console.log(res)\r\n                        if (res.status === 200) {\r\n                            this.$message({\r\n                                message: res.data.message,\r\n                                type: \"success\",\r\n                            });\r\n                            setTimeout(() => {\r\n                                history.pushState({}, \"\", \"/moviehub/loginpage\"); //loginpage\r\n                                location.reload();\r\n                            }, 1000);\r\n                        }\r\n                        else {\r\n                            this.$message({\r\n                                message: res.data.message,\r\n                                type: \"error\",\r\n                            });\r\n                        }\r\n                    })\r\n                        .catch((err) => {\r\n                        this.$message({\r\n                            message: \"system error!\",\r\n                            type: \"error\",\r\n                        });\r\n                        console.log(\"Error\", err);\r\n                    });\r\n                }else{\r\n                  this.$message({\r\n                      message: \"complete the form first!\",\r\n                      type: \"error\",\r\n                   })\r\n                }\r\n            });\r\n        },\r\n    },\r\n    components: { HubIcon }\r\n}\r\n</script>\r\n\r\n<style>\r\n   body {\r\nbackground-image:url('https://wallpapercave.com/dwp2x/wp11089675.jpg');\r\n\r\n}\r\n.forgotpwd {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  background-size: 100% 100%;\r\n}\r\n.form_title {\r\n  width: 370px;\r\n  height: 210px;\r\n  position: absolute;\r\n  top: 5%;\r\n  left: 34%;\r\n  padding: 25px;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n}\r\n.form_title .manage_title .title {\r\n  font-family: 'Microsoft YaHei';\r\n  font-weight: bold;\r\n  font-size: 26px;\r\n  color: orange;\r\n}\r\n.forgot_title {\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n  color: orange;\r\n}\r\n.registerForm {\r\n  margin-top: 20px;\r\n  background-color: #fff;\r\n  padding: 20px 40px 20px 20px;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 5px 10px #cccc;\r\n}\r\n.vertify {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n.vertify >>> .emailcode {\r\n  margin-left: 10px;\r\n  font-size: 10px;\r\n}\r\n.forgot_button {\r\n  padding-left: 80px;\r\n}\r\n.confirm {\r\n  width: 100%;\r\n}\r\n.tip_area {\r\n  text-align: left;\r\n  font-size: 12px;\r\n  color: orange;\r\n  margin-top: 20px;\r\n}\r\n.tip_area a {\r\n  color: orange;\r\n}\r\n.tip_area p {\r\n  margin-top: 15px;\r\n  color: gray;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}