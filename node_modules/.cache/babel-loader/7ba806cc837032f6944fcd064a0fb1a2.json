{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-d22715c8\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"common-layout\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"recommend\"\n}, \"Recommend movies\", -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = {\n  class: \"selectbtngroup\"\n};\nconst _hoisted_4 = {\n  class: \"card-header\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_SearchBar = _resolveComponent(\"SearchBar\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_header = _resolveComponent(\"el-header\");\n\n  const _component_el_option = _resolveComponent(\"el-option\");\n\n  const _component_el_select = _resolveComponent(\"el-select\");\n\n  const _component_el_divider = _resolveComponent(\"el-divider\");\n\n  const _component_el_image = _resolveComponent(\"el-image\");\n\n  const _component_el_card = _resolveComponent(\"el-card\");\n\n  const _component_el_space = _resolveComponent(\"el-space\");\n\n  const _component_el_main = _resolveComponent(\"el-main\");\n\n  const _component_el_container = _resolveComponent(\"el-container\");\n\n  const _component_HubIcon = _resolveComponent(\"HubIcon\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_el_container, null, {\n    default: _withCtx(() => [_createVNode(_component_el_header, {\n      class: \"header\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_SearchBar, {\n        class: \"searchbar\",\n        onInputValue: $options.getInputValue,\n        onItemClick: $options.itemClick,\n        itemlist: $data.itemlist,\n        placeholder: $data.placeholder,\n        nodatatext: $data.nodatatext\n      }, null, 8\n      /* PROPS */\n      , [\"onInputValue\", \"onItemClick\", \"itemlist\", \"placeholder\", \"nodatatext\"]), _createCommentVNode(\"<SearchBar class=\\\"searchbar\\\" @inputValue=\\\"getInputValue\\\" @item-click=\\\"itemClick\\\"\\r\\n       :itemlist=\\\"itemlist\\\" :postlist=\\\"postlist\\\" :placeholder=\\\"placeholder\\\" :nodatatext=\\\"nodatatext\\\"></SearchBar>\"), _createVNode(_component_el_button, {\n        type: \"warning\",\n        round: \"\",\n        class: \"LRbutton\",\n        onClick: _cache[0] || (_cache[0] = $event => _ctx.$router.push('/moviehub/loginpage'))\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"Login/Register\")]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_main, {\n      class: \"main\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", null, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_select, {\n        modelValue: $data.value2,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.value2 = $event),\n        class: \"select\",\n        placeholder: \"sortBy\"\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.optionsSort, item => {\n          return _openBlock(), _createBlock(_component_el_option, {\n            key: item.value,\n            label: item.label,\n            value: item.value\n          }, null, 8\n          /* PROPS */\n          , [\"label\", \"value\"]);\n        }), 128\n        /* KEYED_FRAGMENT */\n        ))]),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"modelValue\"]), _createVNode(_component_el_select, {\n        modelValue: $data.value,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.value = $event),\n        class: \"select\",\n        placeholder: \"filter\"\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.options, item => {\n          return _openBlock(), _createBlock(_component_el_option, {\n            key: item.value,\n            label: item.label,\n            value: item.value\n          }, null, 8\n          /* PROPS */\n          , [\"label\", \"value\"]);\n        }), 128\n        /* KEYED_FRAGMENT */\n        ))]),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"modelValue\"]), _createVNode(_component_el_button, {\n        onClick: _cache[3] || (_cache[3] = $event => $options.searchrelmovie())\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"Search recommended movies\")]),\n        _: 1\n        /* STABLE */\n\n      })])]), _createVNode(_component_el_divider), _createCommentVNode(\"movie card\"), _createVNode(_component_el_space, {\n        wrap: \"\"\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.movietitle, (item, i) => {\n          return _openBlock(), _createBlock(_component_el_card, {\n            key: i,\n            class: \"box-card\",\n            style: {\n              \"width\": \"250px\",\n              \"margin-right\": \"20px\"\n            },\n            onClick: $event => $options.jumptoContent(i)\n          }, {\n            header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"span\", null, _toDisplayString($data.movietitle[i].value) + \"(\" + _toDisplayString($data.moviegenre[i].value) + \")\", 1\n            /* TEXT */\n            ), _createVNode(_component_el_divider), _createElementVNode(\"span\", null, [_createVNode(_component_el_image, {\n              src: $data.movieposter[i].value\n            }, null, 8\n            /* PROPS */\n            , [\"src\"])]), _createVNode(_component_el_divider), _createElementVNode(\"span\", null, \"imdb rating:\" + _toDisplayString($data.movieofficialrating[i].value), 1\n            /* TEXT */\n            )])]),\n            _: 2\n            /* DYNAMIC */\n\n          }, 1032\n          /* PROPS, DYNAMIC_SLOTS */\n          , [\"onClick\"]);\n        }), 128\n        /* KEYED_FRAGMENT */\n        ))]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  })]), _createVNode(_component_HubIcon)], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","_createVNode","_component_el_container","_component_el_header","_component_SearchBar","onInputValue","$options","onItemClick","itemlist","$data","placeholder","nodatatext","_createCommentVNode","_component_el_button","type","round","onClick","_ctx","push","_component_el_main","_hoisted_2","_component_el_select","$event","_createElementBlock","_Fragment","_renderList","item","_createBlock","_component_el_option","key","value","label","_component_el_divider","_component_el_space","wrap","i","_component_el_card","style","header","_toDisplayString","_component_el_image","src","_component_HubIcon"],"sourceRoot":"","sources":["D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\views\\MainPageVisitor.vue"],"sourcesContent":["<template>\r\n\r\n  <div class=\"common-layout\">\r\n    <el-container>\r\n      <el-header class=\"header\">\r\n        \r\n      <SearchBar class=\"searchbar\" @inputValue=\"getInputValue\" @item-click=\"itemClick\"\r\n       :itemlist=\"itemlist\" :placeholder=\"placeholder\" :nodatatext=\"nodatatext\"></SearchBar>\r\n       <!--<SearchBar class=\"searchbar\" @inputValue=\"getInputValue\" @item-click=\"itemClick\"\r\n       :itemlist=\"itemlist\" :postlist=\"postlist\" :placeholder=\"placeholder\" :nodatatext=\"nodatatext\"></SearchBar>-->\r\n       <el-button type=\"warning\" round class=\"LRbutton\" @click=\"$router.push('/moviehub/loginpage')\">Login/Register</el-button> \r\n  \r\n      </el-header>\r\n      \r\n      <el-main class=\"main\">\r\n        <div>\r\n        <div class=\"recommend\">Recommend movies</div>\r\n      <div class=\"selectbtngroup\">\r\n        <el-select v-model=\"value2\" class=\"select\" placeholder=\"sortBy\">\r\n    <el-option\r\n      v-for=\"item in optionsSort\"\r\n      :key=\"item.value\"\r\n      :label=\"item.label\"\r\n      :value=\"item.value\"\r\n      \r\n    />\r\n  </el-select>\r\n  \r\n  <el-select v-model=\"value\" class=\"select\" placeholder=\"filter\">\r\n    <el-option\r\n      v-for=\"item in options\"\r\n      :key=\"item.value\"\r\n      :label=\"item.label\"\r\n      :value=\"item.value\"\r\n      \r\n    />\r\n  </el-select>\r\n  <el-button @click=\"searchrelmovie()\">Search recommended movies</el-button>\r\n</div>\r\n \r\n</div>\r\n        <el-divider />\r\n        <!--movie card-->\r\n        <el-space wrap>\r\n            <el-card v-for=\"(item,i) in movietitle\" :key=\"i\" class=\"box-card\" style=\"width: 250px;margin-right:20px\" \r\n            @click=\"jumptoContent(i)\">\r\n              <template #header>\r\n                <div class=\"card-header\">\r\n                  <span>{{movietitle[i].value}}({{moviegenre[i].value}})</span>\r\n                  <el-divider/>\r\n                  <span><el-image :src=\"movieposter[i].value\"></el-image></span>\r\n                  <el-divider/>\r\n                  <span>imdb rating:{{movieofficialrating[i].value}}</span>\r\n                </div>\r\n              </template>\r\n            </el-card>\r\n        </el-space>\r\n      </el-main>\r\n      \r\n    </el-container>\r\n    \r\n  </div>\r\n  <HubIcon/>\r\n  </template>\r\n  \r\n  <script>\r\n  import { Search } from '@element-plus/icons-vue'\r\n  import HubIcon from '@/components/HubIcon.vue';\r\n\r\n  import SearchBar from '@/components/SearchBar.vue';\r\n  import request2 from \"@/utils/Request2.js\";\r\n  export default{\r\n      data(){\r\n          return{\r\n            components: {\r\n                Search,\r\n                HubIcon\r\n            },\r\n            input1:'',\r\n            value:'',\r\n            value2:'',\r\n            options : [\r\n          {\r\n            value: 'Drama',\r\n            label: 'Drama',\r\n          },\r\n          {\r\n            value: 'Comedy',\r\n            label: 'Comedy',\r\n          },\r\n          {\r\n            value: 'Horror',\r\n            label: 'Horror',\r\n          },\r\n          {\r\n            value: 'Thriller',\r\n            label: 'Thriller',\r\n          },\r\n          {\r\n            value: 'Action',\r\n            label: 'Action',\r\n          },\r\n          {\r\n            value: 'Sci-Fi',\r\n            label: 'Sci-Fi',\r\n          },\r\n          {\r\n            value: 'Crime',\r\n            label: 'Crime',\r\n          },\r\n          {\r\n            value: 'Adventure',\r\n            label: 'Adventure',\r\n          },\r\n          {\r\n            value: 'Other',\r\n            label: 'Other',\r\n          }\r\n          ],\r\n          optionsSort: [\r\n          {\r\n            label: 'A-Z Ascending',\r\n            value: 'alpha,asc',\r\n          },\r\n          {\r\n            label: 'A-Z Descending',\r\n            value: 'alpha,desc',\r\n          },\r\n          {\r\n            label: 'User Rating Ascending',\r\n            value: 'user_rating,asc',\r\n          },\r\n          {\r\n            label: 'User Rating Descending',\r\n            value: 'user_rating,desc',\r\n          },\r\n          {\r\n            label: 'Year Descending',\r\n            value: 'year,desc',\r\n          },\r\n          {\r\n            label: 'Year Ascending',\r\n            value: 'year,asc',\r\n          },\r\n            \r\n            ],\r\n            movietitle:[],\r\n            movieposter:[],\r\n            moviegenre:[],\r\n            movieofficialrating:[],\r\n            movieid:[],\r\n            movieplot:[],\r\n            itemlist: [],\r\n            //postlist:[],\r\n            movielist : [],\r\n            placeholder: \"search your movie\",\r\n            nodatatext: \"no input currently\",\r\n            selectValue: \"\",\r\n            last: \"\",\r\n            \r\n            poster: \"\",\r\n            rating: \"\",\r\n            title: \"\"\r\n          }\r\n        },\r\n        mounted(){\r\n          this.getTopmovies()\r\n        },\r\n        methods:{\r\n          itemClick(data) {\r\n            this.selectValue= data\r\n            for(let i = 0; i<this.movielist.length; i++){\r\n              if(this.selectValue === this.movielist[i].title){\r\n                this.$router.push({path: '/Moviehub/contentpage', query: {\r\n                  poster: this.movielist[i].image, rating: this.movielist[i].rating, title: this.movielist[i].title}});\r\n                \r\n              }\r\n            }\r\n         \r\n            //this.$router.push({path: '/Moviehub/contentpage/' + })\r\n          },\r\n        \r\n          jumptoContent(index) {\r\n            this.$router.push({path: '/Moviehub/contentpage', query: {\r\n              poster: this.movieposter[index].value,rating: this.movieofficialrating[index].value,\r\n              title: this.movietitle[index].value,plot:this.movieplot[index].value,genres:this.moviegenre[index].value}\r\n            });\r\n          \r\n  \r\n          },\r\n          getInputValue(searchvalue) {\r\n            console.log(searchvalue);\r\n            \r\n            /*if(this.last !== searchvalue){\r\n              this.itemlist.length = 0;\r\n            }*/\r\n            this.last = searchvalue;\r\n            request2.get(\"/?title=\" + searchvalue).then(res => {\r\n              if(res.status === 200){\r\n                this.itemlist.length = 0;\r\n                for(let i =0; i<res.data.results.length; i++) {\r\n                  this.movielist.push({\r\n                    title: res.data.results[i].title,\r\n                    image: res.data.results[i].image,\r\n                    rating: res.data.results[i].imDbRating\r\n                  });\r\n                  this.itemlist.push(res.data.results[i].title);\r\n                  //this.postlist.push(res.data.results[i].image);\r\n                }\r\n                console.log(res.data.results.length);\r\n                \r\n              }else {\r\n                this.$message({\r\n                  type: \"error\",\r\n                  message: \"unsucessfully search\"\r\n                })\r\n              }\r\n            })\r\n            // 请求获取筛选列表\r\n            \r\n          },\r\n          searchrelmovie(){\r\n            if (value2!==''){\r\n              let outcome=request2.get(\"/?sort=\"+value2)\r\n              outcome.then(res=>{\r\n              if(res.status === 200){\r\n            \r\n                  for(let i =0; i<res.data.results.length; i++) {\r\n                    console.log(\"search movie\");\r\n                    this.movietitle.push({\r\n                      value:res.data.results[i].title,\r\n                      label:res.data.results[i].title\r\n                    })\r\n                    this.movieofficialrating.push({\r\n                      value:res.data.results[i].imDbRating,\r\n                      label:res.data.results[i].imDbRating\r\n                    })\r\n                    this.movieposter.push({\r\n                      value:res.data.results[i].image,\r\n                      label:res.data.results[i].image\r\n                    })\r\n                    this.movieid.push({\r\n                      value:res.data.results[i].id,\r\n                      label:res.data.results[i].id\r\n                    })\r\n                    this.movieplot.push({\r\n                      value:res.data.results[i].plot,\r\n                      label:res.data.results[i].plot\r\n                    })\r\n                    this.moviegenre.push({\r\n                      value:res.data.results[i].genres,\r\n                      label:res.data.results[i].genres\r\n                    })\r\n                  }\r\n                }else {\r\n                    this.$message({\r\n                      type: \"error\",\r\n                      message: \"unsucessfully search\"\r\n                })\r\n              }\r\n            })\r\n          }\r\n          },\r\n          getTopmovies(){\r\n            //requestmovie.get(\"/k_td4a1cav\").\r\n            // request2.get(\"/?groups=top_250\").\r\n            let outcome=request2.get(\"/?sort=\"+value2)\r\n            outcome.then(res=>{\r\n              if(res.status === 200){\r\n            \r\n                  for(let i =0; i<res.data.results.length; i++) {\r\n                    console.log(\"search movie\");\r\n                    this.movietitle.push({\r\n                      value:res.data.results[i].title,\r\n                      label:res.data.results[i].title\r\n                    })\r\n                    this.movieofficialrating.push({\r\n                      value:res.data.results[i].imDbRating,\r\n                      label:res.data.results[i].imDbRating\r\n                    })\r\n                    this.movieposter.push({\r\n                      value:res.data.results[i].image,\r\n                      label:res.data.results[i].image\r\n                    })\r\n                    this.movieid.push({\r\n                      value:res.data.results[i].id,\r\n                      label:res.data.results[i].id\r\n                    })\r\n                    this.movieplot.push({\r\n                      value:res.data.results[i].plot,\r\n                      label:res.data.results[i].plot\r\n                    })\r\n                    this.moviegenre.push({\r\n                      value:res.data.results[i].genres,\r\n                      label:res.data.results[i].genres\r\n                    })\r\n                  }\r\n                }else {\r\n                    this.$message({\r\n                      type: \"error\",\r\n                      message: \"unsucessfully search\"\r\n                })\r\n              }\r\n            })\r\n          }\r\n        },\r\n        \r\n        components: { HubIcon,SearchBar},\r\n      };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .header{\r\n  background-color: black;\r\n    \r\n  }\r\n  .LRbutton{\r\n  position:relative;\r\n  left:560px;\r\n  top:15px\r\n  }\r\n  .search{\r\n  width:45%;\r\n  margin-top: 15px;\r\n  }\r\n  .select{\r\n  margin-left:10px;\r\n  width:10%;\r\n  right:200px;\r\n  }\r\n  .setting{\r\n  margin-top:10px\r\n  }\r\n  .recommend{\r\n  position:absolute;\r\n  font-size:x-large;\r\n  font-weight:bold;\r\n  color:orange\r\n  }\r\n  .avatar{\r\n  position:relative;\r\n  top:-36.5px;\r\n  right:-600px;\r\n  }\r\n  \r\n  .newwbutton{\r\n    margin-top:15px;\r\n    margin-left:400px;\r\n    \r\n  }\r\n  .selectbtngroup{\r\n    margin-left:100px\r\n  }\r\n  .main{\r\n  background-color: rgb(55, 55, 60);\r\n}\r\n  </style>"]},"metadata":{},"sourceType":"module"}