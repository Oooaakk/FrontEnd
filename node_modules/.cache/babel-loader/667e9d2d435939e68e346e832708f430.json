{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nexport default {\n  data() {\n    var validatePass = (rule, value, callback) => {\n      if (value === \"\") {\n        callback(new Error(\"Please input password\"));\n      } else {\n        if (this.ruleForm.checkPass !== \"\") {\n          this.$refs.ruleForm.validateField(\"checkPass\");\n        }\n\n        callback();\n      }\n    };\n\n    var validatePass2 = (rule, value, callback) => {\n      if (value === \"\") {\n        callback(new Error(\"Please input password again\"));\n      } else if (value !== this.ruleForm.pass) {\n        callback(new Error(\"Please input the same password\"));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      ruleForm: {\n        uname: \"\",\n        pass: \"\",\n        password: \"\"\n      },\n      rules: {\n        uname: [{\n          required: true,\n          message: \"username can not be empty！\",\n          trigger: \"blur\"\n        }],\n        pass: [{\n          required: true,\n          validator: validatePass,\n          trigger: \"blur\"\n        }],\n        password: [{\n          required: true,\n          validator: validatePass2,\n          trigger: \"blur\"\n        }]\n      },\n      loading: false\n    };\n  },\n\n  methods: {\n    /*submitForm(formName) {\r\n      this.$refs[formName].validate((valid) => {\r\n        this.loading = true;  // 提交按钮显示加载动画\r\n        if (valid) {\r\n          let _this = this;\r\n          this.axios({     // axios 向后端发起请求\r\n            url: \"/api/user/register\",  // 请求地址\r\n            method: \"post\",             // 请求方法\r\n            headers: {                  // 请求头\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            data: { // 请求参数，为 data，与登录的 params 不太一样\r\n              uname: _this.ruleForm.uname,\r\n              password: _this.ruleForm.password,\r\n            },\r\n          }).then((res) => { // 当收到后端的响应时执行该括号内的代码，res 为响应信息，也就是后端返回的信息\r\n            if (res.data.code === '0') {  // 当响应的编码为 0 时，说明注册成功\r\n              // 显示后端响应的成功信息\r\n              this.$message({\r\n                message: res.data.msg,\r\n                type: \"success\",\r\n              });\r\n            }else{  // 当响应的编码不为 0 时，说明注册失败\r\n              // 显示后端响应的失败信息\r\n              this.$message({\r\n                message: res.data.msg,\r\n                type: \"warning\",\r\n              });\r\n            }\r\n            // 不管响应成功还是失败，收到后端响应的消息后就不再让登录按钮显示加载动画了\r\n            _this.loading = false;\r\n            console.log(res);\r\n          });\r\n        } else { // 如果账号或密码有一个没填，就直接提示必填，不向后端请求\r\n          console.log(\"error submit!!\");\r\n          this.loading = false;\r\n          return false;\r\n        }\r\n      });\r\n    },*/\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n\n    goBack() {\n      this.$router.go(-1);\n    }\n\n  }\n};","map":{"version":3,"mappings":";AA4CA,eAAe;EACbA,IAAI,GAAG;IACL,IAAIC,YAAW,GAAI,CAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,KAA2B;MAC5C,IAAID,KAAI,KAAM,EAAd,EAAkB;QAChBC,QAAQ,CAAC,IAAIC,KAAJ,CAAU,uBAAV,CAAD,CAAR;MACF,CAFA,MAEO;QACL,IAAI,KAAKC,QAAL,CAAcC,SAAd,KAA4B,EAAhC,EAAoC;UAClC,KAAKC,KAAL,CAAWF,QAAX,CAAoBG,aAApB,CAAkC,WAAlC;QACF;;QACAL,QAAQ;MACV;IACD,CATD;;IAUA,IAAIM,aAAY,GAAI,CAACR,IAAD,EAAOC,KAAP,EAAcC,QAAd,KAA2B;MAC7C,IAAID,KAAI,KAAM,EAAd,EAAkB;QAChBC,QAAQ,CAAC,IAAIC,KAAJ,CAAU,6BAAV,CAAD,CAAR;MACF,CAFA,MAEO,IAAIF,KAAI,KAAM,KAAKG,QAAL,CAAcK,IAA5B,EAAkC;QACvCP,QAAQ,CAAC,IAAIC,KAAJ,CAAU,gCAAV,CAAD,CAAR;MACF,CAFO,MAEA;QACLD,QAAQ;MACV;IACD,CARD;;IASA,OAAO;MACLE,QAAQ,EAAE;QACRM,KAAK,EAAE,EADC;QAERD,IAAI,EAAE,EAFE;QAGRE,QAAQ,EAAE;MAHF,CADL;MAMLC,KAAK,EAAE;QACLF,KAAK,EAAE,CACL;UAAEG,QAAQ,EAAE,IAAZ;UAAkBC,OAAO,EAAE,4BAA3B;UAAyDC,OAAO,EAAE;QAAlE,CADK,CADF;QAILN,IAAI,EAAE,CAAC;UAAEI,QAAQ,EAAE,IAAZ;UAAkBG,SAAS,EAAEjB,YAA7B;UAA2CgB,OAAO,EAAE;QAApD,CAAD,CAJD;QAKLJ,QAAQ,EAAE,CACR;UAAEE,QAAQ,EAAE,IAAZ;UAAkBG,SAAS,EAAER,aAA7B;UAA4CO,OAAO,EAAE;QAArD,CADQ;MALL,CANF;MAeLE,OAAO,EAAE;IAfJ,CAAP;EAiBD,CAtCY;;EAuCbC,OAAO,EAAE;IACP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAwCAC,SAAS,CAACC,QAAD,EAAW;MAClB,KAAKd,KAAL,CAAWc,QAAX,EAAqBC,WAArB;IACD,CA3CM;;IA4CPC,MAAM,GAAG;MACP,KAAKC,OAAL,CAAaC,EAAb,CAAgB,CAAC,CAAjB;IACD;;EA9CM;AAvCI,CAAf","names":["data","validatePass","rule","value","callback","Error","ruleForm","checkPass","$refs","validateField","validatePass2","pass","uname","password","rules","required","message","trigger","validator","loading","methods","resetForm","formName","resetFields","goBack","$router","go"],"sourceRoot":"","sources":["D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\views\\RegisterPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-card class=\"box-card\">\r\n      <h2>Register</h2>\r\n      <el-form\r\n        :model=\"ruleForm\"\r\n        status-icon\r\n        :rules=\"rules\"\r\n        ref=\"ruleForm\"\r\n        label-position=\"left\"\r\n        label-width=\"80px\"\r\n        class=\"demo-ruleForm\"\r\n      >\r\n        <el-form-item label=\"Username: \" prop=\"uname\">\r\n          <el-input v-model=\"ruleForm.uname\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"Password: \" prop=\"pass\">\r\n          <el-input\r\n            type=\"password\"\r\n            show-password\r\n            v-model=\"ruleForm.pass\"\r\n            autocomplete=\"off\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"Confirm Password: \" prop=\"password\">\r\n          <el-input\r\n            type=\"password\"\r\n            v-model=\"ruleForm.password\"\r\n            autocomplete=\"off\"\r\n          ></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div class=\"btnGroup\">\r\n        <el-button type=\"primary\" @click=\"submitForm('ruleForm')\"  v-loading=\"loading\"\r\n          >提交</el-button\r\n        >\r\n        <el-button @click=\"resetForm('ruleForm')\">reset</el-button>\r\n        <el-button @click=\"goBack\">back</el-button>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    var validatePass = (rule, value, callback) => {\r\n      if (value === \"\") {\r\n        callback(new Error(\"Please input password\"));\r\n      } else {\r\n        if (this.ruleForm.checkPass !== \"\") {\r\n          this.$refs.ruleForm.validateField(\"checkPass\");\r\n        }\r\n        callback();\r\n      }\r\n    };\r\n    var validatePass2 = (rule, value, callback) => {\r\n      if (value === \"\") {\r\n        callback(new Error(\"Please input password again\"));\r\n      } else if (value !== this.ruleForm.pass) {\r\n        callback(new Error(\"Please input the same password\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      ruleForm: {\r\n        uname: \"\",\r\n        pass: \"\",\r\n        password: \"\",\r\n      },\r\n      rules: {\r\n        uname: [\r\n          { required: true, message: \"username can not be empty！\", trigger: \"blur\" },\r\n        ],\r\n        pass: [{ required: true, validator: validatePass, trigger: \"blur\" }],\r\n        password: [\r\n          { required: true, validator: validatePass2, trigger: \"blur\" },\r\n        ],\r\n      },\r\n      loading: false\r\n    };\r\n  },\r\n  methods: {\r\n    /*submitForm(formName) {\r\n      this.$refs[formName].validate((valid) => {\r\n        this.loading = true;  // 提交按钮显示加载动画\r\n        if (valid) {\r\n          let _this = this;\r\n          this.axios({     // axios 向后端发起请求\r\n            url: \"/api/user/register\",  // 请求地址\r\n            method: \"post\",             // 请求方法\r\n            headers: {                  // 请求头\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            data: { // 请求参数，为 data，与登录的 params 不太一样\r\n              uname: _this.ruleForm.uname,\r\n              password: _this.ruleForm.password,\r\n            },\r\n          }).then((res) => { // 当收到后端的响应时执行该括号内的代码，res 为响应信息，也就是后端返回的信息\r\n            if (res.data.code === '0') {  // 当响应的编码为 0 时，说明注册成功\r\n              // 显示后端响应的成功信息\r\n              this.$message({\r\n                message: res.data.msg,\r\n                type: \"success\",\r\n              });\r\n            }else{  // 当响应的编码不为 0 时，说明注册失败\r\n              // 显示后端响应的失败信息\r\n              this.$message({\r\n                message: res.data.msg,\r\n                type: \"warning\",\r\n              });\r\n            }\r\n            // 不管响应成功还是失败，收到后端响应的消息后就不再让登录按钮显示加载动画了\r\n            _this.loading = false;\r\n            console.log(res);\r\n          });\r\n        } else { // 如果账号或密码有一个没填，就直接提示必填，不向后端请求\r\n          console.log(\"error submit!!\");\r\n          this.loading = false;\r\n          return false;\r\n        }\r\n      });\r\n    },*/\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields();\r\n    },\r\n    goBack() {\r\n      this.$router.go(-1);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 设置登录面板居中，宽度为400px */\r\n  body {\r\n  background-image:url('https://wallpapercave.com/dwp2x/wp11089675.jpg');\r\n}\r\n.box-card {\r\n  margin: auto auto;\r\n  height: 300px;\r\n  width: 600px;\r\n  \r\n}\r\n\r\n/* 设置登录面板中的表单居中 */\r\n.login-from {\r\n  margin: auto auto;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}