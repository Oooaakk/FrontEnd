{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, resolveDirective as _resolveDirective, openBlock as _openBlock, createBlock as _createBlock, withDirectives as _withDirectives, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-216897e8\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Register\", -1\n/* HOISTED */\n));\n\nconst _hoisted_2 = {\n  class: \"btnGroup\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"提交\");\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\"reset\");\n\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\"back\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n\n  const _component_el_form = _resolveComponent(\"el-form\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_card = _resolveComponent(\"el-card\");\n\n  const _directive_loading = _resolveDirective(\"loading\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_el_card, {\n    class: \"box-card\"\n  }, {\n    default: _withCtx(() => [_hoisted_1, _createVNode(_component_el_form, {\n      model: $data.ruleForm,\n      \"status-icon\": \"\",\n      rules: $data.rules,\n      ref: \"ruleForm\",\n      \"label-position\": \"left\",\n      \"label-width\": \"80px\",\n      class: \"demo-ruleForm\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"Username: \",\n        prop: \"uname\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.ruleForm.uname,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.ruleForm.uname = $event)\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\"])]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_el_form_item, {\n        label: \"Password: \",\n        prop: \"pass\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          type: \"password\",\n          modelValue: $data.ruleForm.pass,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.ruleForm.pass = $event),\n          autocomplete: \"off\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\"])]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_el_form_item, {\n        label: \"Confirm Password: \",\n        prop: \"password\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          type: \"password\",\n          modelValue: $data.ruleForm.password,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.ruleForm.password = $event),\n          autocomplete: \"off\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\"])]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"model\", \"rules\"]), _createElementVNode(\"div\", _hoisted_2, [_withDirectives((_openBlock(), _createBlock(_component_el_button, {\n      type: \"primary\",\n      onClick: _cache[3] || (_cache[3] = $event => _ctx.submitForm('ruleForm'))\n    }, {\n      default: _withCtx(() => [_hoisted_3]),\n      _: 1\n      /* STABLE */\n\n    })), [[_directive_loading, $data.loading]]), _createVNode(_component_el_button, {\n      onClick: _cache[4] || (_cache[4] = $event => $options.resetForm('ruleForm'))\n    }, {\n      default: _withCtx(() => [_hoisted_4]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_button, {\n      onClick: $options.goBack\n    }, {\n      default: _withCtx(() => [_hoisted_5]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"onClick\"])])]),\n    _: 1\n    /* STABLE */\n\n  })]);\n}","map":{"version":3,"mappings":";;;;gEAGMA,oBAAiB,IAAjB,EAAiB,IAAjB,EAAI,UAAJ,EAAY;AAAA;AAAZ;;;EA4BKC,KAAK,EAAC;;;iDAEN;;iDAEuC;;iDACf;;;;;;;;;;;;;;;uBAnCjCC,oBAsCM,KAtCN,EAsCM,IAtCN,EAsCM,CArCJC,aAoCUC,kBApCV,EAoCU;IApCDH,KAAK,EAAC;EAoCL,CApCV,EAAyB;sBACvB,MAAiB,CAAjBI,UAAiB,EACjBF,aA0BUG,kBA1BV,EA0BU;MAzBPC,KAAK,EAAEC,cAyBA;MAxBR,iBAwBQ;MAvBPC,KAAK,EAAED,WAuBA;MAtBRE,GAAG,EAAC,UAsBI;MArBR,kBAAe,MAqBP;MApBR,eAAY,MAoBJ;MAnBRT,KAAK,EAAC;IAmBE,CA1BV;wBASE,MAEe,CAFfE,aAEeQ,uBAFf,EAEe;QAFDC,KAAK,EAAC,YAEL;QAFkBC,IAAI,EAAC;MAEvB,CAFf;0BACE,MAA8C,CAA9CV,aAA8CW,mBAA9C,EAA8C;sBAA3BN,eAASO,KAAkB;qEAA3BP,eAASO,QAAKC;QAAa,CAA9C;;QAAA,iBAA8C;;;;OADhD,CAEe,EACfb,aAMeQ,uBANf,EAMe;QANDC,KAAK,EAAC,YAML;QANkBC,IAAI,EAAC;MAMvB,CANf;0BACE,MAIY,CAJZV,aAIYW,mBAJZ,EAIY;UAHVG,IAAI,EAAC,UAGK;sBAFDT,eAASU,IAER;qEAFDV,eAASU,OAAIF,OAEZ;UADVG,YAAY,EAAC;QACH,CAJZ;;QAAA,iBAIY;;;;OALd,CADe,EAQfhB,aAMeQ,uBANf,EAMe;QANDC,KAAK,EAAC,oBAML;QAN0BC,IAAI,EAAC;MAM/B,CANf;0BACE,MAIY,CAJZV,aAIYW,mBAJZ,EAIY;UAHVG,IAAI,EAAC,UAGK;sBAFDT,eAASY,QAER;qEAFDZ,eAASY,WAAQJ,OAEhB;UADVG,YAAY,EAAC;QACH,CAJZ;;QAAA,iBAIY;;;;OALd,CARe;;;;KAXjB;;IAAA,qBADiB,EA4BjBnB,oBAMM,KANN,cAMM,gCALJqB,aAECC,oBAFD,EAEC;MAFUL,IAAI,EAAC,SAEf;MAF0BM,OAAK,sCAAEC,gBAAU,UAAV,CAAF;IAE/B,CAFD;wBACG,MAAE;;;;KADL,0BAAsEhB,gBAKlE,EAFJL,aAA2DmB,oBAA3D,EAA2D;MAA/CC,OAAK,sCAAEE,mBAAS,UAAT,CAAF;IAA0C,CAA3D;wBAA0C,MAAK;;;;KAA/C,CAEI,EADJtB,aAA2CmB,oBAA3C,EAA2C;MAA/BC,OAAK,EAAEE;IAAwB,CAA3C,EAAyB;wBAAE,MAAI,aAAN;;;;IAAA,CAAzB;;IAAA,cACI,CANN,CA5BiB,EADM;;;;EAAA,CAAzB,CAqCI,CAtCN","names":["_createElementVNode","class","_createElementBlock","_createVNode","_component_el_card","_hoisted_1","_component_el_form","model","$data","rules","ref","_component_el_form_item","label","prop","_component_el_input","uname","$event","type","pass","autocomplete","password","_createBlock","_component_el_button","onClick","_ctx","$options"],"sourceRoot":"","sources":["D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\views\\RegisterPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-card class=\"box-card\">\r\n      <h2>Register</h2>\r\n      <el-form\r\n        :model=\"ruleForm\"\r\n        status-icon\r\n        :rules=\"rules\"\r\n        ref=\"ruleForm\"\r\n        label-position=\"left\"\r\n        label-width=\"80px\"\r\n        class=\"demo-ruleForm\"\r\n      >\r\n        <el-form-item label=\"Username: \" prop=\"uname\">\r\n          <el-input v-model=\"ruleForm.uname\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"Password: \" prop=\"pass\">\r\n          <el-input\r\n            type=\"password\"\r\n            v-model=\"ruleForm.pass\"\r\n            autocomplete=\"off\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"Confirm Password: \" prop=\"password\">\r\n          <el-input\r\n            type=\"password\"\r\n            v-model=\"ruleForm.password\"\r\n            autocomplete=\"off\"\r\n          ></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div class=\"btnGroup\">\r\n        <el-button type=\"primary\" @click=\"submitForm('ruleForm')\"  v-loading=\"loading\"\r\n          >提交</el-button\r\n        >\r\n        <el-button @click=\"resetForm('ruleForm')\">reset</el-button>\r\n        <el-button @click=\"goBack\">back</el-button>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    var validatePass = (rule, value, callback) => {\r\n      if (value === \"\") {\r\n        callback(new Error(\"Please input password\"));\r\n      } else {\r\n        if (this.ruleForm.checkPass !== \"\") {\r\n          this.$refs.ruleForm.validateField(\"checkPass\");\r\n        }\r\n        callback();\r\n      }\r\n    };\r\n    var validatePass2 = (rule, value, callback) => {\r\n      if (value === \"\") {\r\n        callback(new Error(\"Please input password again\"));\r\n      } else if (value !== this.ruleForm.pass) {\r\n        callback(new Error(\"Please input the same password\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      ruleForm: {\r\n        uname: \"\",\r\n        pass: \"\",\r\n        password: \"\",\r\n      },\r\n      rules: {\r\n        uname: [\r\n          { required: true, message: \"username can not be empty！\", trigger: \"blur\" },\r\n        ],\r\n        pass: [{ required: true, validator: validatePass, trigger: \"blur\" }],\r\n        password: [\r\n          { required: true, validator: validatePass2, trigger: \"blur\" },\r\n        ],\r\n      },\r\n      loading: false\r\n    };\r\n  },\r\n  methods: {\r\n    /*submitForm(formName) {\r\n      this.$refs[formName].validate((valid) => {\r\n        this.loading = true;  // 提交按钮显示加载动画\r\n        if (valid) {\r\n          let _this = this;\r\n          this.axios({     // axios 向后端发起请求\r\n            url: \"/api/user/register\",  // 请求地址\r\n            method: \"post\",             // 请求方法\r\n            headers: {                  // 请求头\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            data: { // 请求参数，为 data，与登录的 params 不太一样\r\n              uname: _this.ruleForm.uname,\r\n              password: _this.ruleForm.password,\r\n            },\r\n          }).then((res) => { // 当收到后端的响应时执行该括号内的代码，res 为响应信息，也就是后端返回的信息\r\n            if (res.data.code === '0') {  // 当响应的编码为 0 时，说明注册成功\r\n              // 显示后端响应的成功信息\r\n              this.$message({\r\n                message: res.data.msg,\r\n                type: \"success\",\r\n              });\r\n            }else{  // 当响应的编码不为 0 时，说明注册失败\r\n              // 显示后端响应的失败信息\r\n              this.$message({\r\n                message: res.data.msg,\r\n                type: \"warning\",\r\n              });\r\n            }\r\n            // 不管响应成功还是失败，收到后端响应的消息后就不再让登录按钮显示加载动画了\r\n            _this.loading = false;\r\n            console.log(res);\r\n          });\r\n        } else { // 如果账号或密码有一个没填，就直接提示必填，不向后端请求\r\n          console.log(\"error submit!!\");\r\n          this.loading = false;\r\n          return false;\r\n        }\r\n      });\r\n    },*/\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields();\r\n    },\r\n    goBack() {\r\n      this.$router.go(-1);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 设置登录面板居中，宽度为400px */\r\n.box-card {\r\n  margin: auto auto;\r\n  height: 1000px;\r\n  width: 500px;\r\n}\r\n/* 设置登录面板中的表单居中 */\r\n.login-from {\r\n  margin: auto auto;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}