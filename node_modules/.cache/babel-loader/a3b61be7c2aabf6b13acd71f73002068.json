{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"h2\"\n}, \"Login Form\", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"http://localhost:8080/#/moviehub/forgetpassword\",\n  class: \"forgetpass\"\n}, \"Forget password? Click here\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"http://localhost:8080/#/moviehub/registerpage\",\n  class: \"registerlink\"\n}, \"If you dont have an account, register here\", -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\"Log in\");\n\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\"Reset\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_card = _resolveComponent(\"el-card\");\n\n  const _component_el_form = _resolveComponent(\"el-form\");\n\n  const _component_HubIcon = _resolveComponent(\"HubIcon\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_el_form, {\n    ref: \"ruleFormRef\",\n    model: $data.ruleForm,\n    \"status-icon\": \"\",\n    rules: $data.rules,\n    \"label-width\": \"210px\",\n    class: \"demo-ruleForm\",\n    \"cell-style\": {\n      'text-align': 'center'\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_card, {\n      class: \"box-card\"\n    }, {\n      default: _withCtx(() => [_hoisted_1, _createVNode(_component_el_form_item, {\n        class: \"languagecolour\",\n        label: \"Email\",\n        prop: \"pass\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          class: \"inputform\",\n          modelValue: $data.ruleForm.pass,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.ruleForm.pass = $event),\n          type: \"email\",\n          autocomplete: \"off\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\"])]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_el_form_item, {\n        class: \"languagecolour\",\n        label: \"Password\",\n        prop: \"checkPass\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          class: \"inputform\",\n          modelValue: $data.ruleForm.checkPass,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.ruleForm.checkPass = $event),\n          type: \"password\",\n          autocomplete: \"off\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\"]), _hoisted_2]),\n        _: 1\n        /* STABLE */\n\n      }), _hoisted_3, _createVNode(_component_el_form_item, {\n        class: \"loginresetbutton\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: _cache[2] || (_cache[2] = $event => $options.submitForm(_ctx.ruleFormRef))\n        }, {\n          default: _withCtx(() => [_hoisted_4]),\n          _: 1\n          /* STABLE */\n\n        }), _createVNode(_component_el_button, {\n          onClick: _cache[3] || (_cache[3] = $event => $options.resetForm(_ctx.ruleFormRef))\n        }, {\n          default: _withCtx(() => [_hoisted_5]),\n          _: 1\n          /* STABLE */\n\n        })]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"model\", \"rules\"]), _createVNode(_component_HubIcon)], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gCAYMA,oBAA8B,IAA9B,EAA8B;EAA1BC,KAAK,EAAC;AAAoB,CAA9B,EAAe,YAAf,EAAyB;AAAA;AAAzB;;gCAWAD,oBAA4G,GAA5G,EAA4G;EAAzGE,IAAI,EAAC,iDAAoG;EAAlDD,KAAK,EAAC;AAA4C,CAA5G,EAA6E,6BAA7E,EAAwG;AAAA;AAAxG;;gCAEFD,oBAA2H,GAA3H,EAA2H;EAAxHE,IAAI,EAAC,+CAAmH;EAAnED,KAAK,EAAC;AAA6D,CAA3H,EAA6E,4CAA7E,EAAuH;AAAA;AAAvH;;iDAGK;;iDAEyC;;;;;;;;;;;;;;;6DA5BhDE,aA+BUC,kBA/BV,EA+BU;IA9BRC,GAAG,EAAC,aA8BI;IA7BPC,KAAK,EAAEC,cA6BA;IA5BR,iBA4BQ;IA3BPC,KAAK,EAAED,WA2BA;IA1BR,eAAY,OA0BJ;IAzBRN,KAAK,EAAC,eAyBE;IAxBP,cAAY;MAAA;IAAA;EAwBL,CA/BV;sBASA,MAqBU,CArBVE,aAqBUM,kBArBV,EAqBU;MArBDR,KAAK,EAAC;IAqBL,CArBV,EAAyB;wBACrB,MAA8B,CAA9BS,UAA8B,EAChCP,aAEeQ,uBAFf,EAEe;QAFDV,KAAK,EAAG,gBAEP;QAFwBW,KAAK,EAAC,OAE9B;QAFsCC,IAAI,EAAC;MAE3C,CAFf;0BACE,MAAuF,CAAvFV,aAAuFW,mBAAvF,EAAuF;UAA7Eb,KAAK,EAAG,WAAqE;sBAAhDM,eAASQ,IAAuC;qEAAhDR,eAASQ,OAAIC,OAAmC;UAAjCC,IAAI,EAAC,OAA4B;UAApBC,YAAY,EAAC;QAAO,CAAvF;;QAAA,iBAAuF;;;;OADzF,CADgC,EAIhCf,aAQeQ,uBARf,EAQe;QARDV,KAAK,EAAG,gBAQP;QARwBW,KAAK,EAAC,UAQ9B;QARyCC,IAAI,EAAC;MAQ9C,CARf;0BACE,MAKE,CALFV,aAKEW,mBALF,EAKE;UAJAb,KAAK,EAAG,WAIR;sBAHSM,eAASY,SAGlB;qEAHSZ,eAASY,YAASH,OAG3B;UAFAC,IAAI,EAAC,UAEL;UADAC,YAAY,EAAC;QACb,CALF;;QAAA,iBAKE,EACFE,UADE;;;;OANJ,CAJgC,EAahCC,UAbgC,EAchClB,aAKeQ,uBALf,EAKe;QALDV,KAAK,EAAC;MAKL,CALf,EAAsC;0BACpC,MAEC,CAFDE,aAECmB,oBAFD,EAEC;UAFUL,IAAI,EAAC,SAEf;UAF0BM,OAAK,sCAAEC,oBAAWC,gBAAX,CAAF;QAE/B,CAFD;4BACG,MAAM;;;;SADT,CAEC,EACDtB,aAA6DmB,oBAA7D,EAA6D;UAAjDC,OAAK,sCAAEC,mBAAUC,gBAAV,CAAF;QAA4C,CAA7D;4BAA4C,MAAK;;;;SAAjD,CADC,EAHmC;;;;MAAA,CAAtC,CAdgC,EADT;;;;IAAA,CAAzB,CAqBU;;;;GA9BV;;EAAA,uBAiCAtB,aAAUuB,kBAAV","names":["_createElementVNode","class","href","_createVNode","_component_el_form","ref","model","$data","rules","_component_el_card","_hoisted_1","_component_el_form_item","label","prop","_component_el_input","pass","$event","type","autocomplete","checkPass","_hoisted_2","_hoisted_3","_component_el_button","onClick","$options","_ctx","_component_HubIcon"],"sourceRoot":"","sources":["D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\views\\LoginPage.vue"],"sourcesContent":["<template>\r\n  \r\n  <el-form\r\n    ref=\"ruleFormRef\"\r\n    :model=\"ruleForm\"\r\n    status-icon\r\n    :rules=\"rules\"\r\n    label-width=\"210px\"\r\n    class=\"demo-ruleForm\"\r\n    :cell-style=\"{ 'text-align': 'center'}\"\r\n  >\r\n  <el-card class=\"box-card\">\r\n      <h2 class=\"h2\">Login Form</h2>\r\n    <el-form-item class = \"languagecolour\" label=\"Email\" prop=\"pass\">\r\n      <el-input class = \"inputform\" v-model=\"ruleForm.pass\" type=\"email\" autocomplete=\"off\"/>\r\n    </el-form-item>\r\n    <el-form-item class = \"languagecolour\" label=\"Password\" prop=\"checkPass\">\r\n      <el-input\r\n        class = \"inputform\"\r\n        v-model=\"ruleForm.checkPass\"\r\n        type=\"password\"\r\n        autocomplete=\"off\"\r\n      />\r\n      <a href=\"http://localhost:8080/#/moviehub/forgetpassword\" class=\"forgetpass\">Forget password? Click here</a>\r\n    </el-form-item>\r\n    <a href=\"http://localhost:8080/#/moviehub/registerpage\" class=\"registerlink\">If you dont have an account, register here</a>\r\n    <el-form-item class=\"loginresetbutton\">\r\n      <el-button type=\"primary\" @click=\"submitForm(ruleFormRef)\"\r\n        >Log in</el-button\r\n      >\r\n      <el-button @click=\"resetForm(ruleFormRef)\" >Reset</el-button>\r\n    </el-form-item>\r\n  </el-card>\r\n  </el-form>\r\n  \r\n  <HubIcon/>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        email: \"\",\r\n        password: \"\",\r\n      },\r\n      rules: {\r\n        email: [\r\n          { required: true, message: \"用户名不能为空！\", trigger: \"blur\" },\r\n        ],\r\n        password: [\r\n          { required: true, message: \"密码不能为空！\", trigger: \"blur\" },\r\n        ],\r\n      },\r\n      loading: false, // 是否显示加载动画\r\n    };\r\n  },\r\n  methods: {\r\n    submitForm(formName) {\r\n      // 验证表单中的账号密码是否有效，因为在上面rules中定义为了必填 required: true\r\n      this.$refs[formName].validate((valid) => {\r\n        // 点击登录后，让登录按钮开始转圈圈（展示加载动画）\r\n        this.loading = true;\r\n        // 如果经过校验，账号密码都不为空，则发送请求到后端登录接口\r\n        if (valid) {\r\n          let _this = this;\r\n          // 使用 axios 将登录信息发送到后端\r\n          this.axios({\r\n            url: \"/api/user/login\",               // 请求地址\r\n            method: \"post\",                       // 请求方法\r\n            headers: {                            // 请求头\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            params: {                             // 请求参数\r\n              uname: _this.ruleForm.uname,\r\n              password: _this.ruleForm.password,\r\n            },\r\n          }).then((res) => { // 当收到后端的响应时执行该括号内的代码，res 为响应信息，也就是后端返回的信息\r\n            if (res.data.code === \"0\") {  // 当响应的编码为 0 时，说明登录成功\r\n              // 将用户信息存储到sessionStorage中\r\n              sessionStorage.setItem(\"userInfo\", JSON.stringify(res.data.data));\r\n              // 跳转页面到首页\r\n              this.$router.push('/home');\r\n              // 显示后端响应的成功信息\r\n              this.$message({\r\n                message: res.data.msg,\r\n                type: \"success\",\r\n              });\r\n            } else {  // 当响应的编码不为 0 时，说明登录失败\r\n              // 显示后端响应的失败信息\r\n              this.$message({\r\n                message: res.data.msg,\r\n                type: \"warning\",\r\n              });\r\n            }\r\n            // 不管响应成功还是失败，收到后端响应的消息后就不再让登录按钮显示加载动画了\r\n            _this.loading = false;\r\n            console.log(res);\r\n          });\r\n        } else {  // 如果账号或密码有一个没填，就直接提示必填，不向后端请求\r\n          console.log(\"error submit!!\");\r\n          this.loading = false;\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields();\r\n    },\r\n  },\r\n};\r\n\r\n\r\n</script>\r\n\r\n<style >\r\n.languagecolour .el-form-item__label {\r\n  color: #FF9900;\r\n  \r\n}\r\n.loginresetbutton{\r\n  margin:10px;\r\n}\r\n.registerlink{\r\n  color: rgba(75, 75, 243, 0.767);\r\n  text-decoration:none;\r\n  margin-left: 150px ;\r\n}\r\n.forgetpass{\r\n  color:#FF9900;\r\n  text-decoration:none;\r\n  margin-left:5px\r\n}\r\n.inputform {\r\n  width: 50%;\r\n}\r\n.demo-ruleForm {\r\n text-align:left; border-radius: 8px;margin: 0 auto;width:50%;\r\n  position:fixed;top:220px;left:325px;font-weight: bold;\r\n}\r\n\r\nbody {\r\nbackground-image:url('https://wallpapercave.com/dwp2x/wp11089675.jpg');\r\n}\r\n.box-card {\r\n  margin-top:-100px;\r\n  width:105%;\r\n}\r\n.login-from {\r\n  margin: auto auto;\r\n  \r\n}\r\n.h2{\r\n  margin-left:230px;\r\n}\r\n  </style>"]},"metadata":{},"sourceType":"module"}