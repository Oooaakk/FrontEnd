{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport HubIcon from '@/components/HubIcon.vue';\nimport request from \"@/utils/RequestFile.js\";\nexport default {\n  data() {\n    var validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('Please input the password'));\n      } else if (value !== '' && (this.ruleForm.pass.length < 5 || this.ruleForm.pass.length > 16)) {\n        console.log(\"incorrect password form!!\");\n        callback(new Error('Please input correct form of password'));\n      } else {\n        callback();\n      }\n    };\n\n    var validatePass1 = (rule, value, callback) => {\n      var reg = /^([A-Za-z0-9]+[.-_])*[A-Za-z0-9]+@[A-Za-z0-9-]+(\\.[A-Z|a-z]{2,})+$/;\n\n      if (!value) {\n        return callback(new Error('cannot input empty email!'));\n      } else if (!reg.test(value)) {\n        return callback(new Error('please input valid email!'));\n      } else {\n        callback();\n      }\n    };\n\n    var validatePass3 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('Please input the password again'));\n      } else if (value !== this.ruleForm.pass) {\n        callback(new Error(\"Two inputs don't match!\"));\n      } else {\n        callback();\n      }\n    };\n\n    var validatePass4 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('Please input the username'));\n      } else {\n        callback();\n      }\n    };\n\n    var validatePass5 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('Please input the age'));\n      } else {\n        callback();\n      }\n    };\n\n    var validatePass6 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('Please choose the gender'));\n      } else {\n        callback();\n      }\n    };\n\n    var validatePass7 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('Please input the verification code'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      pwdType: \"password\",\n      isShowPwd: false,\n      btnMsg: \"get code\",\n      isDisabled: false,\n      time: 30,\n      forgotPass: {\n        email: \"\",\n        password: \"\",\n        // password2: \"\",\n        verificationCode: \"\"\n      },\n      options: [{\n        value: 'Male',\n        label: 'Male'\n      }, {\n        value: 'Female',\n        label: 'Female'\n      }],\n      ruleForm: {\n        uname: \"\",\n        pass: \"\",\n        password: \"\",\n        checkgender: \"\",\n        checkusername: \"\",\n        confirmPass: \"\",\n        checkage: \"\"\n      },\n      rules: {\n        uname: [{\n          required: true,\n          validator: validatePass1,\n          trigger: \"blur\"\n        }],\n        pass: [{\n          required: true,\n          validator: validatePass,\n          trigger: \"blur\"\n        }],\n        confirmPass: [{\n          required: true,\n          validator: validatePass3,\n          trigger: \"blur\"\n        }],\n        checkusername: [{\n          required: true,\n          validator: validatePass4,\n          trigger: \"blur\"\n        }],\n        checkage: [{\n          required: true,\n          validator: validatePass5,\n          trigger: \"blur\"\n        }],\n        checkgender: [{\n          required: true,\n          validator: validatePass6,\n          trigger: \"blur\"\n        }] //password: [{required: true, validator: validatePass7, trigger: \"blur\"}],\n\n      }\n    };\n  },\n\n  computed: {\n    showPwd() {\n      return this.isShowPwd ? \"third-icon-alieye\" : \"third-icon-alino_eye\";\n    }\n\n  },\n  methods: {\n    togglePwd() {\n      this.pwdType === \"password\" ? this.pwdType = \"\" : this.pwdType = \"password\";\n      this.isShowPwd = !this.isShowPwd;\n    },\n\n    // verification code\n    getCode(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          request.post(\"/user/forgotPassword/email\", {\n            email: this.forgotPass.email\n          }).then(res => {\n            // console.log(res)\n            if (res.status === 200) {\n              console.log(\"nothing\");\n            }\n          }).catch(err => {\n            this.$message({\n              message: \"email is sent\",\n              type: \"success\"\n            });\n            this.isDisabled = true;\n            let interval = setInterval(() => {\n              this.btnMsg = \"\" + this.time + \"seconds\";\n              --this.time;\n\n              if (this.time < 0) {\n                this.btnMsg = \"get code\";\n                this.time = 30;\n                this.isDisabled = false;\n                clearInterval(interval);\n              }\n            }, 1000);\n          });\n        }\n      });\n    },\n\n    // change password\n    forgetPass(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          request.post(\"/user/forgotPassword\", this.forgotPass).then(res => {\n            // console.log(res)\n            if (res.status === 200) {\n              this.$message({\n                message: res.data.message,\n                type: \"success\"\n              });\n              setTimeout(() => {\n                history.pushState({}, \"\", \"/moviehub/loginpage\"); //loginpage\n\n                location.reload();\n              }, 1000);\n            } else {\n              this.$message({\n                message: res.data.message,\n                type: \"error\"\n              });\n            }\n          }).catch(err => {\n            this.$message({\n              message: \"system error!\",\n              type: \"error\"\n            });\n            console.log(\"Error\", err);\n          });\n        }\n      });\n    },\n\n    submitEmail() {\n      if (this.ruleForm.uname !== '') {\n        request.post(\"/user/register/email\", {\n          email: this.ruleForm.uname\n        }).then(res => {\n          console.log(\"successfully sent\");\n        });\n      } else {\n        alert(\"input email to get verification code!!!\");\n      }\n    },\n\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid && this.ruleForm.password !== '') {\n          console.log(\"register!\");\n          request.post(\"/user/register\", {\n            email: this.ruleForm.uname,\n            password: this.ruleForm.pass,\n            verificationCode: this.ruleForm.password,\n            age: this.ruleForm.checkage,\n            gender: this.ruleForm.checkgender,\n            username: this.ruleForm.checkusername\n          }).then(res => {\n            if (res.status === 200) {\n              this.$message({\n                type: \"success\",\n                message: \"successfully registered\"\n              });\n              this.$router.push('/moviehub/loginpage');\n            } else {\n              this.$message({\n                type: \"error\",\n                message: res.message\n              });\n            }\n          });\n        } else {\n          alert(\"input verification code please!!!\");\n        }\n      });\n    },\n\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n\n    goBack() {\n      this.$router.go(-1);\n    }\n\n  },\n  components: {\n    HubIcon\n  }\n};","map":{"version":3,"mappings":"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","names":["HubIcon","request","data","validatePass","rule","value","callback","Error","ruleForm","pass","length","console","log","validatePass1","reg","test","validatePass3","validatePass4","validatePass5","validatePass6","validatePass7","pwdType","isShowPwd","btnMsg","isDisabled","time","forgotPass","email","password","verificationCode","options","label","uname","checkgender","checkusername","confirmPass","checkage","rules","required","validator","trigger","computed","showPwd","methods","togglePwd","getCode","formName","$refs","validate","valid","post","then","res","status","catch","err","$message","message","type","interval","setInterval","clearInterval","forgetPass","setTimeout","history","pushState","location","reload","submitEmail","alert","submitForm","age","gender","username","$router","push","resetForm","resetFields","goBack","go","components"],"sourceRoot":"","sources":["D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\views\\RegisterPage.vue"],"sourcesContent":["<template>\r\n  <div id= 'building'>\r\n      <HubIcon></HubIcon>\r\n  <div>\r\n    <el-card class=\"box-card\">\r\n      <h2 class=\"color\">Register</h2>\r\n      <el-form\r\n        :model=\"ruleForm\"\r\n        status-icon\r\n        :rules=\"rules\"\r\n        ref=\"ruleForm\"\r\n        label-position=\"left\"\r\n        label-width=\"150px\"\r\n        class=\"demo-ruleForm\"\r\n      >\r\n      <el-form-item label=\"email\" prop=\"email\">\r\n            <el-input\r\n              type=\"email\"\r\n              v-model=\"forgotPass.email\"\r\n              prefix-icon=\"el-icon-message\"\r\n              placeholder=\"type in email\"\r\n            >\r\n            </el-input>\r\n          </el-form-item>\r\n        <el-form-item class = \"color1\" label=\"Username\" prop=\"checkusername\">\r\n      <el-input class = \"inputform\" v-model=\"ruleForm.checkusername\" maxlength=16 placeholder=\"Jack\" />\r\n    </el-form-item>\r\n        <el-form-item class = \"color1\" label=\"Gender\" prop=\"checkgender\">\r\n      <el-select v-model=\"ruleForm.checkgender\" class=\"m-2\" placeholder=\"Select\" size=\"large\">\r\n      <el-option\r\n        v-for=\"item in options\"\r\n        :key=\"item.value\"\r\n        :label=\"item.label\"\r\n        :value=\"item.value\"\r\n      />\r\n      </el-select>\r\n    \r\n    </el-form-item>\r\n    <el-form-item class = \"color1\" label=\"Age\" prop=\"checkage\">\r\n      <el-input-number v-model=\"ruleForm.checkage\" :min=\"1\" :max=\"120\" @change=\"handleChange\" />\r\n    </el-form-item>\r\n    <el-form-item label=\"password\" prop=\"password\">\r\n            <el-input\r\n              :type=\"pwdType\"\r\n              v-model=\"forgotPass.password\"\r\n              prefix-icon=\"el-icon-lock\"\r\n              placeholder=\"type in password\"\r\n            >\r\n              <i\r\n        \r\n                title=\"show or hide password\"\r\n                :class=\"showPwd\"\r\n                :style=\"{ color: '#409eff', cursor: 'pointer' }\"\r\n                @click=\"togglePwd\"\r\n              >\r\n              </i>\r\n            </el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"confirm password\" prop=\"password2\">\r\n            <el-input\r\n              :type=\"pwdType\"\r\n              v-model=\"forgotPass.password2\"\r\n              prefix-icon=\"el-icon-lock\"\r\n              placeholder=\"confirm password\"\r\n            >\r\n              <i\r\n     \r\n                title=\"show or hide password\"\r\n                :class=\"showPwd\"\r\n                :style=\"{ color: '#409eff', cursor: 'pointer' }\"\r\n                @click=\"togglePwd\"\r\n              >\r\n              </i>\r\n            </el-input>\r\n          </el-form-item>\r\n        <el-form-item class= \"color1\" label=\"Verification code\" prop=\"password\">\r\n          <el-input\r\n            v-model=\"ruleForm.password\"\r\n            autocomplete=\"off\"\r\n          ></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div class=\"btnGroup\">\r\n        <el-button type=\"primary\" @click=\"submitForm('ruleForm')\"\r\n          >submit</el-button\r\n        >\r\n        <el-button @click=\"resetForm('ruleForm')\">reset</el-button>\r\n        <el-button @click=\"goBack\">back</el-button>\r\n        <el-button @click=\"submitEmail()\">Get verification code</el-button>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport HubIcon from '@/components/HubIcon.vue';\r\nimport request from \"@/utils/RequestFile.js\"\r\nexport default {\r\n  data() {\r\n    \r\n      var validatePass = (rule, value, callback) => {\r\n        if (value === '') {\r\n        callback(new Error('Please input the password'))\r\n        }else if(value!=='' && ((this.ruleForm.pass.length < 5 || this.ruleForm.pass.length > 16))){\r\n          console.log(\"incorrect password form!!\")\r\n          callback(new Error('Please input correct form of password'))\r\n        }else{\r\n          callback()\r\n        }\r\n        \r\n      }\r\n      ;\r\n      var validatePass1 = (rule, value, callback) => {\r\n         var reg = /^([A-Za-z0-9]+[.-_])*[A-Za-z0-9]+@[A-Za-z0-9-]+(\\.[A-Z|a-z]{2,})+$/;\r\n          if (!value) {\r\n            return callback(new Error('cannot input empty email!'))\r\n          } else if (!reg.test(value)) {\r\n            return callback(new Error('please input valid email!'))\r\n          } else {\r\n            callback()\r\n          }\r\n  \r\n      };\r\n      var validatePass3 = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('Please input the password again'))\r\n      } else if (value !== this.ruleForm.pass) {\r\n        callback(new Error(\"Two inputs don't match!\"))\r\n      } else {\r\n        callback()\r\n      }\r\n      };\r\n      var validatePass4 = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('Please input the username'))\r\n        } else {\r\n          callback()\r\n        }\r\n      };\r\n\r\n      var validatePass5 = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('Please input the age'))\r\n        } else {\r\n          callback()\r\n        }\r\n      };\r\n      var validatePass6 = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('Please choose the gender'))\r\n        } else {\r\n          callback()\r\n        }\r\n      }\r\n      var validatePass7 = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('Please input the verification code'))\r\n        } else {\r\n          callback()\r\n        }\r\n      }\r\n      return {\r\n        pwdType: \"password\",\r\n            isShowPwd: false,\r\n            btnMsg: \"get code\",\r\n            isDisabled: false,\r\n            time: 30,\r\n            forgotPass: {\r\n                email: \"\",\r\n                password: \"\",\r\n                // password2: \"\",\r\n                verificationCode: \"\",\r\n            },\r\n        options: [\r\n          {\r\n          value: 'Male',\r\n          label: 'Male',\r\n        },\r\n        {\r\n          value: 'Female',\r\n          label: 'Female',\r\n        },\r\n    \r\n        ],\r\n          \r\n          ruleForm: {\r\n              uname: \"\",\r\n              pass: \"\",\r\n              password: \"\",\r\n              checkgender: \"\",\r\n              checkusername: \"\",\r\n              confirmPass: \"\",\r\n              checkage: \"\"\r\n          },\r\n          rules: {\r\n              uname: [\r\n                  { required: true, validator: validatePass1, trigger: \"blur\" },\r\n              ],\r\n              pass: [{ required: true, validator: validatePass, trigger: \"blur\" }],\r\n              confirmPass : [{required: true, validator: validatePass3, trigger: \"blur\"}],\r\n              checkusername : [{required: true, validator: validatePass4, trigger: \"blur\"}],\r\n              checkage : [{required: true, validator: validatePass5, trigger: \"blur\"}],\r\n              checkgender: [{required: true, validator: validatePass6, trigger: \"blur\"}],\r\n              //password: [{required: true, validator: validatePass7, trigger: \"blur\"}],\r\n             \r\n          },\r\n      };\r\n  },\r\n  computed: {\r\n        showPwd() {\r\n            return this.isShowPwd ? \"third-icon-alieye\" : \"third-icon-alino_eye\";\r\n        },\r\n    },\r\n  methods: {\r\n    togglePwd() {\r\n            this.pwdType === \"password\"\r\n                ? (this.pwdType = \"\")\r\n                : (this.pwdType = \"password\");\r\n            this.isShowPwd = !this.isShowPwd;\r\n        },\r\n        // verification code\r\n        getCode(formName) {\r\n            this.$refs[formName].validate((valid) => {\r\n                if (valid) {\r\n                    request\r\n                        .post(\"/user/forgotPassword/email\", {\r\n                            email: this.forgotPass.email,\r\n                 \r\n                    })\r\n                        .then((res) => {\r\n                        // console.log(res)\r\n                        if (res.status === 200) {\r\n                            console.log(\"nothing\");\r\n                        }\r\n                    }).catch((err) => {\r\n                      this.$message({\r\n                                message: \"email is sent\",\r\n                                type: \"success\",\r\n                            });\r\n                            this.isDisabled = true;\r\n                            let interval = setInterval(() => {\r\n                                this.btnMsg = \"\" + this.time + \"seconds\";\r\n                                --this.time;\r\n                                if (this.time < 0) {\r\n                                    this.btnMsg = \"get code\";\r\n                                    this.time = 30;\r\n                                    this.isDisabled = false;\r\n                                    clearInterval(interval);\r\n                                }\r\n                       }, 1000);\r\n                    });\r\n                }\r\n            });\r\n        },\r\n        // change password\r\n        forgetPass(formName) {\r\n            this.$refs[formName].validate((valid) => {\r\n                if (valid) {\r\n                    request\r\n                        .post(\"/user/forgotPassword\", this.forgotPass)\r\n                        .then((res) => {\r\n                        // console.log(res)\r\n                        if (res.status === 200) {\r\n                            this.$message({\r\n                                message: res.data.message,\r\n                                type: \"success\",\r\n                            });\r\n                            setTimeout(() => {\r\n                                history.pushState({}, \"\", \"/moviehub/loginpage\"); //loginpage\r\n                                location.reload();\r\n                            }, 1000);\r\n                        }\r\n                        else {\r\n                            this.$message({\r\n                                message: res.data.message,\r\n                                type: \"error\",\r\n                            });\r\n                        }\r\n                    })\r\n                        .catch((err) => {\r\n                        this.$message({\r\n                            message: \"system error!\",\r\n                            type: \"error\",\r\n                        });\r\n                        console.log(\"Error\", err);\r\n                    });\r\n                }\r\n            });\r\n        },\r\n      submitEmail() {\r\n        if (this.ruleForm.uname!==''){\r\n          request.post(\"/user/register/email\", {email: this.ruleForm.uname}).then(res => {\r\n            console.log(\"successfully sent\")\r\n          })\r\n \r\n        }else{\r\n          alert(\"input email to get verification code!!!\")\r\n        }\r\n      } ,\r\n      \r\n      submitForm(formName) {\r\n        this.$refs[formName].validate((valid) => {\r\n          if (valid && this.ruleForm.password!=='') {\r\n              console.log(\"register!\");\r\n              request.post(\"/user/register\", {email: this.ruleForm.uname, password: this.ruleForm.pass, \r\n                verificationCode: this.ruleForm.password, age: this.ruleForm.checkage, gender: this.ruleForm.checkgender,\r\n                  username: this.ruleForm.checkusername}).then(res => {\r\n                  if(res.status === 200){\r\n                    this.$message({\r\n                    type: \"success\",\r\n                    message: \"successfully registered\"\r\n                    })\r\n                      this.$router.push('/moviehub/loginpage');\r\n                  }else {\r\n                  this.$message({\r\n                    type: \"error\",\r\n                    message: res.message\r\n                  })\r\n                }\r\n              })\r\n          }else{\r\n            alert(\"input verification code please!!!\")\r\n          }\r\n      })\r\n      },\r\n      resetForm(formName) {\r\n          this.$refs[formName].resetFields();\r\n      },\r\n      goBack() {\r\n          this.$router.go(-1);\r\n      },\r\n  },\r\n  components: { HubIcon }\r\n  \r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.box-card {\r\n  margin: auto auto;\r\n  width: 600px;\r\n}\r\n.login-from {\r\n  margin: auto auto;\r\n}\r\n#building{\r\nbackground:url('https://wallpapercave.com/dwp2x/wp11089675.jpg');\r\nwidth:100%;\r\nheight:100%;\r\nposition:fixed;\r\nbackground-size:100% 100%;\r\n}\r\n.color {\r\n  color: orange;\r\n}\r\n.color1 .el-form-item__label{\r\n  color : orange;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}