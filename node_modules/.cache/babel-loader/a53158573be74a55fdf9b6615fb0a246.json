{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport router from \"@/router\";\nconst request = axios.create({\n  baseURL: \"https://moivehub-itproject-team004.herokuapp.com\",\n  timeout: 100000\n});\nconst whiteUrls = [\"/user/login\", '/user/register'];\nrequest.interceptors.request.use(config => {\n  config.headers['Content-Type'] = 'application/json;charset=utf-8';\n  let userJson = localStorage.getItem(\"user\");\n\n  if (!whiteUrls.includes(config.url)) {\n    if (!userJson) {\n      router.push(\"/moviehub/loginpage\");\n    } else {\n      let user = JSON.parse(userJson);\n      config.headers['Authorization'] = 'Bearer ' + user;\n    }\n  }\n\n  return config;\n}, error => {\n  return Promise.reject(error);\n}); // response 拦截器\n// 可以在接口响应后统一处理结果\n\nrequest.interceptors.response.use(response => {\n  //let res = response.data\n  // // file\n  // if (response.config.responseType === 'blob') {\n  //   return res\n  // }\n  // 兼容服务端返回的字符串数据\n  // if (typeof res === 'string') {\n  //   res = res ? JSON.parse(res) : res\n  // }\n  // 验证token\n  if (response.status === 401) {\n    console.error(\"token过期，重新登录\");\n    router.push(\"/moviehub/loginpage\");\n  }\n\n  return response;\n}, error => {\n  console.log('err' + error); // for debug\n\n  return Promise.reject(error);\n});\nexport default request;","map":{"version":3,"names":["axios","router","request","create","baseURL","timeout","whiteUrls","interceptors","use","config","headers","userJson","localStorage","getItem","includes","url","push","user","JSON","parse","error","Promise","reject","response","status","console","log"],"sources":["D:/comp30022 frontend/comp30022-movie-review-website/moviehub_frontend/src/utils/RequestFile.js"],"sourcesContent":["import axios from 'axios'\r\nimport router from \"@/router\"\r\n\r\nconst request = axios.create({\r\n  baseURL: \"https://moivehub-itproject-team004.herokuapp.com\",\r\n  timeout: 100000\r\n})\r\n\r\nconst whiteUrls = [\"/user/login\", '/user/register']\r\n\r\nrequest.interceptors.request.use(config => {\r\n  config.headers['Content-Type'] = 'application/json;charset=utf-8'\r\n\r\n  let userJson = localStorage.getItem(\"user\")\r\n  if (!whiteUrls.includes(config.url)) {\r\n    if (!userJson) {\r\n      router.push(\"/moviehub/loginpage\")\r\n    } else {\r\n      let user = JSON.parse(userJson)\r\n      config.headers['Authorization'] = 'Bearer ' + user\r\n    }\r\n  }\r\n  return config\r\n}, error => {\r\n  return Promise.reject(error)\r\n})\r\n\r\n// response 拦截器\r\n// 可以在接口响应后统一处理结果\r\nrequest.interceptors.response.use(\r\n  response => {\r\n    //let res = response.data\r\n    // // file\r\n    // if (response.config.responseType === 'blob') {\r\n    //   return res\r\n    // }\r\n    // 兼容服务端返回的字符串数据\r\n    // if (typeof res === 'string') {\r\n    //   res = res ? JSON.parse(res) : res\r\n    // }\r\n    // 验证token\r\n    if (response.status === 401) {\r\n      console.error(\"token过期，重新登录\")\r\n      router.push(\"/moviehub/loginpage\")\r\n    }\r\n    return response\r\n  },\r\n  error => {\r\n    console.log('err' + error) // for debug\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n\r\nexport default request"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,OAAO,GAAGF,KAAK,CAACG,MAAN,CAAa;EAC3BC,OAAO,EAAE,kDADkB;EAE3BC,OAAO,EAAE;AAFkB,CAAb,CAAhB;AAKA,MAAMC,SAAS,GAAG,CAAC,aAAD,EAAgB,gBAAhB,CAAlB;AAEAJ,OAAO,CAACK,YAAR,CAAqBL,OAArB,CAA6BM,GAA7B,CAAiCC,MAAM,IAAI;EACzCA,MAAM,CAACC,OAAP,CAAe,cAAf,IAAiC,gCAAjC;EAEA,IAAIC,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAf;;EACA,IAAI,CAACP,SAAS,CAACQ,QAAV,CAAmBL,MAAM,CAACM,GAA1B,CAAL,EAAqC;IACnC,IAAI,CAACJ,QAAL,EAAe;MACbV,MAAM,CAACe,IAAP,CAAY,qBAAZ;IACD,CAFD,MAEO;MACL,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWR,QAAX,CAAX;MACAF,MAAM,CAACC,OAAP,CAAe,eAAf,IAAkC,YAAYO,IAA9C;IACD;EACF;;EACD,OAAOR,MAAP;AACD,CAbD,EAaGW,KAAK,IAAI;EACV,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAfD,E,CAiBA;AACA;;AACAlB,OAAO,CAACK,YAAR,CAAqBgB,QAArB,CAA8Bf,GAA9B,CACEe,QAAQ,IAAI;EACV;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;IAC3BC,OAAO,CAACL,KAAR,CAAc,cAAd;IACAnB,MAAM,CAACe,IAAP,CAAY,qBAAZ;EACD;;EACD,OAAOO,QAAP;AACD,CAjBH,EAkBEH,KAAK,IAAI;EACPK,OAAO,CAACC,GAAR,CAAY,QAAQN,KAApB,EADO,CACoB;;EAC3B,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CArBH;AAyBA,eAAelB,OAAf"},"metadata":{},"sourceType":"module"}