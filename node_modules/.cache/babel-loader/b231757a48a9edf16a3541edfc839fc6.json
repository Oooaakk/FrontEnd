{"ast":null,"code":"export default {\n  data() {\n    return {\n      ruleForm: {\n        email: \"\",\n        password: \"\"\n      },\n      rules: {\n        email: [{\n          required: true,\n          message: \"用户名不能为空！\",\n          trigger: \"blur\"\n        }],\n        password: [{\n          required: true,\n          message: \"密码不能为空！\",\n          trigger: \"blur\"\n        }]\n      },\n      loading: false // 是否显示加载动画\n\n    };\n  },\n\n  methods: {\n    submitForm(formName) {\n      // 验证表单中的账号密码是否有效，因为在上面rules中定义为了必填 required: true\n      this.$refs[formName].validate(valid => {\n        // 点击登录后，让登录按钮开始转圈圈（展示加载动画）\n        this.loading = true; // 如果经过校验，账号密码都不为空，则发送请求到后端登录接口\n\n        if (valid) {\n          let _this = this; // 使用 axios 将登录信息发送到后端\n\n\n          this.axios({\n            url: \"/api/user/login\",\n            // 请求地址\n            method: \"post\",\n            // 请求方法\n            headers: {\n              // 请求头\n              \"Content-Type\": \"application/json\"\n            },\n            params: {\n              // 请求参数\n              uname: _this.ruleForm.uname,\n              password: _this.ruleForm.password\n            }\n          }).then(res => {\n            // 当收到后端的响应时执行该括号内的代码，res 为响应信息，也就是后端返回的信息\n            if (res.data.code === \"0\") {\n              // 当响应的编码为 0 时，说明登录成功\n              // 将用户信息存储到sessionStorage中\n              sessionStorage.setItem(\"userInfo\", JSON.stringify(res.data.data)); // 跳转页面到首页\n\n              this.$router.push('/home'); // 显示后端响应的成功信息\n\n              this.$message({\n                message: res.data.msg,\n                type: \"success\"\n              });\n            } else {\n              // 当响应的编码不为 0 时，说明登录失败\n              // 显示后端响应的失败信息\n              this.$message({\n                message: res.data.msg,\n                type: \"warning\"\n              });\n            } // 不管响应成功还是失败，收到后端响应的消息后就不再让登录按钮显示加载动画了\n\n\n            _this.loading = false;\n            console.log(res);\n          });\n        } else {\n          // 如果账号或密码有一个没填，就直接提示必填，不向后端请求\n          console.log(\"error submit!!\");\n          this.loading = false;\n          return false;\n        }\n      });\n    },\n\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAuCA,eAAe;EACbA,IAAI,GAAG;IACL,OAAO;MACLC,QAAQ,EAAE;QACRC,KAAK,EAAE,EADC;QAERC,QAAQ,EAAE;MAFF,CADL;MAKLC,KAAK,EAAE;QACLF,KAAK,EAAE,CACL;UAAEG,QAAQ,EAAE,IAAZ;UAAkBC,OAAO,EAAE,UAA3B;UAAuCC,OAAO,EAAE;QAAhD,CADK,CADF;QAILJ,QAAQ,EAAE,CACR;UAAEE,QAAQ,EAAE,IAAZ;UAAkBC,OAAO,EAAE,SAA3B;UAAsCC,OAAO,EAAE;QAA/C,CADQ;MAJL,CALF;MAaLC,OAAO,EAAE,KAbJ,CAaW;;IAbX,CAAP;EAeD,CAjBY;;EAkBbC,OAAO,EAAE;IACPC,UAAU,CAACC,QAAD,EAAW;MACnB;MACA,KAAKC,KAAL,CAAWD,QAAX,EAAqBE,QAArB,CAA+BC,KAAD,IAAW;QACvC;QACA,KAAKN,OAAL,GAAe,IAAf,CAFuC,CAGvC;;QACA,IAAIM,KAAJ,EAAW;UACT,IAAIC,KAAI,GAAI,IAAZ,CADS,CAET;;;UACA,KAAKC,KAAL,CAAW;YACTC,GAAG,EAAE,iBADI;YAC6B;YACtCC,MAAM,EAAE,MAFC;YAE6B;YACtCC,OAAO,EAAE;cAA6B;cACpC,gBAAgB;YADT,CAHA;YAMTC,MAAM,EAAE;cAA8B;cACpCC,KAAK,EAAEN,KAAK,CAACd,QAAN,CAAeoB,KADhB;cAENlB,QAAQ,EAAEY,KAAK,CAACd,QAAN,CAAeE;YAFnB;UANC,CAAX,EAUGmB,IAVH,CAUSC,GAAD,IAAS;YAAE;YACjB,IAAIA,GAAG,CAACvB,IAAJ,CAASwB,IAAT,KAAkB,GAAtB,EAA2B;cAAG;cAC5B;cACAC,cAAc,CAACC,OAAf,CAAuB,UAAvB,EAAmCC,IAAI,CAACC,SAAL,CAAeL,GAAG,CAACvB,IAAJ,CAASA,IAAxB,CAAnC,EAFyB,CAGzB;;cACA,KAAK6B,OAAL,CAAaC,IAAb,CAAkB,OAAlB,EAJyB,CAKzB;;cACA,KAAKC,QAAL,CAAc;gBACZzB,OAAO,EAAEiB,GAAG,CAACvB,IAAJ,CAASgC,GADN;gBAEZC,IAAI,EAAE;cAFM,CAAd;YAIF,CAVA,MAUO;cAAG;cACR;cACA,KAAKF,QAAL,CAAc;gBACZzB,OAAO,EAAEiB,GAAG,CAACvB,IAAJ,CAASgC,GADN;gBAEZC,IAAI,EAAE;cAFM,CAAd;YAIF,CAjBe,CAkBf;;;YACAlB,KAAK,CAACP,OAAN,GAAgB,KAAhB;YACA0B,OAAO,CAACC,GAAR,CAAYZ,GAAZ;UACD,CA/BD;QAgCF,CAnCA,MAmCO;UAAG;UACRW,OAAO,CAACC,GAAR,CAAY,gBAAZ;UACA,KAAK3B,OAAL,GAAe,KAAf;UACA,OAAO,KAAP;QACF;MACD,CA5CD;IA6CD,CAhDM;;IAiDP4B,SAAS,CAACzB,QAAD,EAAW;MAClB,KAAKC,KAAL,CAAWD,QAAX,EAAqB0B,WAArB;IACD;;EAnDM;AAlBI,CAAf","names":["data","ruleForm","email","password","rules","required","message","trigger","loading","methods","submitForm","formName","$refs","validate","valid","_this","axios","url","method","headers","params","uname","then","res","code","sessionStorage","setItem","JSON","stringify","$router","push","$message","msg","type","console","log","resetForm","resetFields"],"sourceRoot":"","sources":["D:\\comp30022 frontend\\comp30022-movie-review-website\\moviehub_frontend\\src\\views\\LoginPage.vue"],"sourcesContent":["<template>\r\n  \r\n  <el-form\r\n    ref=\"ruleFormRef\"\r\n    :model=\"ruleForm\"\r\n    status-icon\r\n    :rules=\"rules\"\r\n    label-width=\"210px\"\r\n    class=\"demo-ruleForm\"\r\n    :cell-style=\"{ 'text-align': 'center'}\"\r\n  >\r\n  <el-card class=\"box-card\">\r\n      <h2 class=\"h2\">Login Form</h2>\r\n    <el-form-item class = \"languagecolour\" label=\"Email\" prop=\"pass\">\r\n      <el-input class = \"inputform\" v-model=\"ruleForm.pass\" type=\"email\" autocomplete=\"off\"/>\r\n    </el-form-item>\r\n    <el-form-item class = \"languagecolour\" label=\"Password\" prop=\"checkPass\">\r\n      <el-input\r\n        class = \"inputform\"\r\n        v-model=\"ruleForm.checkPass\"\r\n        type=\"password\"\r\n        autocomplete=\"off\"\r\n      />\r\n      <a href=\"http://localhost:8080/#/moviehub/forgetpassword\" class=\"forgetpass\">Forget password? Click here</a>\r\n    </el-form-item>\r\n    <a href=\"http://localhost:8080/#/moviehub/registerpage\" class=\"registerlink\">If you dont have an account, register here</a>\r\n    <el-form-item class=\"loginresetbutton\">\r\n      <el-button type=\"primary\" @click=\"submitForm(ruleFormRef)\"\r\n        >Log in</el-button\r\n      >\r\n      <el-button @click=\"resetForm(ruleFormRef)\" >Reset</el-button>\r\n    </el-form-item>\r\n  </el-card>\r\n  </el-form>\r\n  \r\n  <HubIcon/>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        email: \"\",\r\n        password: \"\",\r\n      },\r\n      rules: {\r\n        email: [\r\n          { required: true, message: \"用户名不能为空！\", trigger: \"blur\" },\r\n        ],\r\n        password: [\r\n          { required: true, message: \"密码不能为空！\", trigger: \"blur\" },\r\n        ],\r\n      },\r\n      loading: false, // 是否显示加载动画\r\n    };\r\n  },\r\n  methods: {\r\n    submitForm(formName) {\r\n      // 验证表单中的账号密码是否有效，因为在上面rules中定义为了必填 required: true\r\n      this.$refs[formName].validate((valid) => {\r\n        // 点击登录后，让登录按钮开始转圈圈（展示加载动画）\r\n        this.loading = true;\r\n        // 如果经过校验，账号密码都不为空，则发送请求到后端登录接口\r\n        if (valid) {\r\n          let _this = this;\r\n          // 使用 axios 将登录信息发送到后端\r\n          this.axios({\r\n            url: \"/api/user/login\",               // 请求地址\r\n            method: \"post\",                       // 请求方法\r\n            headers: {                            // 请求头\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            params: {                             // 请求参数\r\n              uname: _this.ruleForm.uname,\r\n              password: _this.ruleForm.password,\r\n            },\r\n          }).then((res) => { // 当收到后端的响应时执行该括号内的代码，res 为响应信息，也就是后端返回的信息\r\n            if (res.data.code === \"0\") {  // 当响应的编码为 0 时，说明登录成功\r\n              // 将用户信息存储到sessionStorage中\r\n              sessionStorage.setItem(\"userInfo\", JSON.stringify(res.data.data));\r\n              // 跳转页面到首页\r\n              this.$router.push('/home');\r\n              // 显示后端响应的成功信息\r\n              this.$message({\r\n                message: res.data.msg,\r\n                type: \"success\",\r\n              });\r\n            } else {  // 当响应的编码不为 0 时，说明登录失败\r\n              // 显示后端响应的失败信息\r\n              this.$message({\r\n                message: res.data.msg,\r\n                type: \"warning\",\r\n              });\r\n            }\r\n            // 不管响应成功还是失败，收到后端响应的消息后就不再让登录按钮显示加载动画了\r\n            _this.loading = false;\r\n            console.log(res);\r\n          });\r\n        } else {  // 如果账号或密码有一个没填，就直接提示必填，不向后端请求\r\n          console.log(\"error submit!!\");\r\n          this.loading = false;\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields();\r\n    },\r\n  },\r\n};\r\n\r\n\r\n</script>\r\n\r\n<style >\r\n.languagecolour .el-form-item__label {\r\n  color: #FF9900;\r\n  \r\n}\r\n.loginresetbutton{\r\n  margin:10px;\r\n}\r\n.registerlink{\r\n  color: rgba(75, 75, 243, 0.767);\r\n  text-decoration:none;\r\n  margin-left: 150px ;\r\n}\r\n.forgetpass{\r\n  color:#FF9900;\r\n  text-decoration:none;\r\n  margin-left:5px\r\n}\r\n.inputform {\r\n  width: 50%;\r\n}\r\n.demo-ruleForm {\r\n text-align:left; border-radius: 8px;margin: 0 auto;width:50%;\r\n  position:fixed;top:220px;left:325px;font-weight: bold;\r\n}\r\n\r\nbody {\r\nbackground-image:url('https://wallpapercave.com/dwp2x/wp11089675.jpg');\r\n}\r\n.box-card {\r\n  margin-top:-100px;\r\n  width:105%;\r\n}\r\n.login-from {\r\n  margin: auto auto;\r\n  \r\n}\r\n.h2{\r\n  margin-left:230px;\r\n}\r\n  </style>"]},"metadata":{},"sourceType":"module"}